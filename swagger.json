{
    "openapi": "3.0.3",
    "servers": [{ "url": "https://api.recal.dev", "description": "Production" }],
    "security": [{ "recalToken": [] }],
    "info": { "title": "Recal API", "description": "The Recal API is the public API of Recal.", "version": "0.2.0" },
    "components": {
        "securitySchemes": {
            "recalToken": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "Token",
                "description": "The Recal API token"
            }
        },
        "schemas": {}
    },
    "tags": [
        { "name": "Status", "description": "Check the status of the API" },
        { "name": "Organizations", "description": "Routes for the Organizations" },
        { "name": "Organization Calendar", "description": "Routes for the Organization Calendar" },
        { "name": "Organization Scheduling", "description": "Routes for the Organization Scheduling" },
        { "name": "Users", "description": "Routes for the Users" },
        { "name": "User Calendar", "description": "Routes for the User Calendar" },
        { "name": "User Scheduling", "description": "Routes for the User Scheduling" },
        { "name": "User OAuth", "description": "Routes for the User OAuth" }
    ],
    "paths": {
        "/status": {
            "get": {
                "responses": {
                    "200": {
                        "examples": ["API is running and healthy! 🦊"],
                        "content": {
                            "application/json": {
                                "schema": { "examples": ["API is running and healthy! 🦊"], "type": "string" }
                            },
                            "multipart/form-data": {
                                "schema": { "examples": ["API is running and healthy! 🦊"], "type": "string" }
                            },
                            "text/plain": {
                                "schema": { "examples": ["API is running and healthy! 🦊"], "type": "string" }
                            }
                        }
                    }
                },
                "operationId": "getStatus",
                "description": "Check if the API is running",
                "tags": ["Status"]
            }
        },
        "/v1/organizations": {
            "get": {
                "responses": {
                    "200": {
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": { "anyOf": [{ "examples": ["Recal"], "type": "string" }, { "type": "null" }] },
                                "slug": { "examples": ["recal"], "type": "string" },
                                "createdAt": {
                                    "examples": ["2025-04-24T00:00:00.000Z"],
                                    "anyOf": [
                                        { "examples": ["2025-04-24T00:00:00.000Z"], "type": "Date" },
                                        { "format": "date-time", "type": "string" },
                                        { "format": "date", "type": "string" },
                                        { "type": "number" }
                                    ]
                                },
                                "members": { "type": "array" }
                            },
                            "required": ["name", "slug", "createdAt"]
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "anyOf": [
                                                    { "examples": ["Recal"], "type": "string" },
                                                    { "type": "null" }
                                                ]
                                            },
                                            "slug": { "examples": ["recal"], "type": "string" },
                                            "createdAt": {
                                                "examples": ["2025-04-24T00:00:00.000Z"],
                                                "anyOf": [
                                                    { "examples": ["2025-04-24T00:00:00.000Z"], "type": "Date" },
                                                    { "format": "date-time", "type": "string" },
                                                    { "format": "date", "type": "string" },
                                                    { "type": "number" }
                                                ]
                                            },
                                            "members": { "type": "array" }
                                        },
                                        "required": ["name", "slug", "createdAt"]
                                    }
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "anyOf": [
                                                    { "examples": ["Recal"], "type": "string" },
                                                    { "type": "null" }
                                                ]
                                            },
                                            "slug": { "examples": ["recal"], "type": "string" },
                                            "createdAt": {
                                                "examples": ["2025-04-24T00:00:00.000Z"],
                                                "anyOf": [
                                                    { "examples": ["2025-04-24T00:00:00.000Z"], "type": "Date" },
                                                    { "format": "date-time", "type": "string" },
                                                    { "format": "date", "type": "string" },
                                                    { "type": "number" }
                                                ]
                                            },
                                            "members": { "type": "array" }
                                        },
                                        "required": ["name", "slug", "createdAt"]
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "anyOf": [
                                                    { "examples": ["Recal"], "type": "string" },
                                                    { "type": "null" }
                                                ]
                                            },
                                            "slug": { "examples": ["recal"], "type": "string" },
                                            "createdAt": {
                                                "examples": ["2025-04-24T00:00:00.000Z"],
                                                "anyOf": [
                                                    { "examples": ["2025-04-24T00:00:00.000Z"], "type": "Date" },
                                                    { "format": "date-time", "type": "string" },
                                                    { "format": "date", "type": "string" },
                                                    { "type": "number" }
                                                ]
                                            },
                                            "members": { "type": "array" }
                                        },
                                        "required": ["name", "slug", "createdAt"]
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "getV1Organizations",
                "tags": ["Organizations"],
                "security": [{ "recalToken": [] }],
                "description": "Get all organizations"
            },
            "post": {
                "parameters": [],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "anyOf": [{ "examples": ["Recal"], "type": "string" }, { "type": "null" }]
                                        },
                                        "slug": { "examples": ["recal"], "type": "string" },
                                        "createdAt": {
                                            "examples": ["2025-04-24T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["2025-04-24T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "members": { "type": "array" }
                                    },
                                    "required": ["name", "slug", "createdAt"]
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "anyOf": [{ "examples": ["Recal"], "type": "string" }, { "type": "null" }]
                                        },
                                        "slug": { "examples": ["recal"], "type": "string" },
                                        "createdAt": {
                                            "examples": ["2025-04-24T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["2025-04-24T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "members": { "type": "array" }
                                    },
                                    "required": ["name", "slug", "createdAt"]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "anyOf": [{ "examples": ["Recal"], "type": "string" }, { "type": "null" }]
                                        },
                                        "slug": { "examples": ["recal"], "type": "string" },
                                        "createdAt": {
                                            "examples": ["2025-04-24T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["2025-04-24T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "members": { "type": "array" }
                                    },
                                    "required": ["name", "slug", "createdAt"]
                                }
                            }
                        }
                    },
                    "409": {
                        "examples": ["Sub organization with slug recal_1 already exists"],
                        "content": {
                            "application/json": {
                                "schema": {
                                    "examples": ["Sub organization with slug recal_1 already exists"],
                                    "type": "string"
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "examples": ["Sub organization with slug recal_1 already exists"],
                                    "type": "string"
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "examples": ["Sub organization with slug recal_1 already exists"],
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "operationId": "postV1Organizations",
                "tags": ["Organizations"],
                "security": [{ "recalToken": [] }],
                "description": "Create a new organization",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "examples": ["Recal"],
                                        "minLength": 3,
                                        "maxLength": 128,
                                        "type": "string"
                                    },
                                    "slug": {
                                        "examples": ["recal"],
                                        "minLength": 3,
                                        "maxLength": 128,
                                        "pattern": "^[a-z0-9]+(?:[_-][a-z0-9]+)*$",
                                        "type": "string"
                                    }
                                },
                                "required": ["slug"]
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "examples": ["Recal"],
                                        "minLength": 3,
                                        "maxLength": 128,
                                        "type": "string"
                                    },
                                    "slug": {
                                        "examples": ["recal"],
                                        "minLength": 3,
                                        "maxLength": 128,
                                        "pattern": "^[a-z0-9]+(?:[_-][a-z0-9]+)*$",
                                        "type": "string"
                                    }
                                },
                                "required": ["slug"]
                            }
                        },
                        "text/plain": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "examples": ["Recal"],
                                        "minLength": 3,
                                        "maxLength": 128,
                                        "type": "string"
                                    },
                                    "slug": {
                                        "examples": ["recal"],
                                        "minLength": 3,
                                        "maxLength": 128,
                                        "pattern": "^[a-z0-9]+(?:[_-][a-z0-9]+)*$",
                                        "type": "string"
                                    }
                                },
                                "required": ["slug"]
                            }
                        }
                    }
                }
            }
        },
        "/v1/organizations/{orgSlug}": {
            "get": {
                "parameters": [
                    {
                        "examples": ["recal"],
                        "schema": {
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 128,
                            "pattern": "^[a-z0-9]+(?:[_-][a-z0-9]+)*$"
                        },
                        "in": "path",
                        "name": "orgSlug",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "anyOf": [{ "examples": ["Recal"], "type": "string" }, { "type": "null" }]
                                        },
                                        "slug": { "examples": ["recal"], "type": "string" },
                                        "createdAt": {
                                            "examples": ["2025-04-24T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["2025-04-24T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "members": { "type": "array" }
                                    },
                                    "required": ["name", "slug", "createdAt"]
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "anyOf": [{ "examples": ["Recal"], "type": "string" }, { "type": "null" }]
                                        },
                                        "slug": { "examples": ["recal"], "type": "string" },
                                        "createdAt": {
                                            "examples": ["2025-04-24T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["2025-04-24T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "members": { "type": "array" }
                                    },
                                    "required": ["name", "slug", "createdAt"]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "anyOf": [{ "examples": ["Recal"], "type": "string" }, { "type": "null" }]
                                        },
                                        "slug": { "examples": ["recal"], "type": "string" },
                                        "createdAt": {
                                            "examples": ["2025-04-24T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["2025-04-24T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "members": { "type": "array" }
                                    },
                                    "required": ["name", "slug", "createdAt"]
                                }
                            }
                        }
                    },
                    "404": {
                        "const": "Organization not found",
                        "content": {
                            "application/json": { "schema": { "const": "Organization not found", "type": "string" } },
                            "multipart/form-data": {
                                "schema": { "const": "Organization not found", "type": "string" }
                            },
                            "text/plain": { "schema": { "const": "Organization not found", "type": "string" } }
                        }
                    }
                },
                "operationId": "getV1OrganizationsByOrgSlug",
                "tags": ["Organizations"],
                "security": [{ "recalToken": [] }],
                "description": "Get organization by slug"
            },
            "put": {
                "parameters": [
                    {
                        "examples": ["recal"],
                        "schema": {
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 128,
                            "pattern": "^[a-z0-9]+(?:[_-][a-z0-9]+)*$"
                        },
                        "in": "path",
                        "name": "orgSlug",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "anyOf": [{ "examples": ["Recal"], "type": "string" }, { "type": "null" }]
                                        },
                                        "slug": { "examples": ["recal"], "type": "string" },
                                        "createdAt": {
                                            "examples": ["2025-04-24T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["2025-04-24T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "members": { "type": "array" }
                                    },
                                    "required": ["name", "slug", "createdAt"]
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "anyOf": [{ "examples": ["Recal"], "type": "string" }, { "type": "null" }]
                                        },
                                        "slug": { "examples": ["recal"], "type": "string" },
                                        "createdAt": {
                                            "examples": ["2025-04-24T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["2025-04-24T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "members": { "type": "array" }
                                    },
                                    "required": ["name", "slug", "createdAt"]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "anyOf": [{ "examples": ["Recal"], "type": "string" }, { "type": "null" }]
                                        },
                                        "slug": { "examples": ["recal"], "type": "string" },
                                        "createdAt": {
                                            "examples": ["2025-04-24T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["2025-04-24T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "members": { "type": "array" }
                                    },
                                    "required": ["name", "slug", "createdAt"]
                                }
                            }
                        }
                    },
                    "404": {
                        "const": "Organization not found",
                        "content": {
                            "application/json": { "schema": { "const": "Organization not found", "type": "string" } },
                            "multipart/form-data": {
                                "schema": { "const": "Organization not found", "type": "string" }
                            },
                            "text/plain": { "schema": { "const": "Organization not found", "type": "string" } }
                        }
                    }
                },
                "operationId": "putV1OrganizationsByOrgSlug",
                "tags": ["Organizations"],
                "security": [{ "recalToken": [] }],
                "description": "Update organization by slug",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "examples": ["Recal"],
                                        "minLength": 3,
                                        "maxLength": 128,
                                        "type": "string"
                                    },
                                    "slug": {
                                        "examples": ["recal"],
                                        "minLength": 3,
                                        "maxLength": 128,
                                        "pattern": "^[a-z0-9]+(?:[_-][a-z0-9]+)*$",
                                        "type": "string"
                                    }
                                },
                                "required": ["slug"]
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "examples": ["Recal"],
                                        "minLength": 3,
                                        "maxLength": 128,
                                        "type": "string"
                                    },
                                    "slug": {
                                        "examples": ["recal"],
                                        "minLength": 3,
                                        "maxLength": 128,
                                        "pattern": "^[a-z0-9]+(?:[_-][a-z0-9]+)*$",
                                        "type": "string"
                                    }
                                },
                                "required": ["slug"]
                            }
                        },
                        "text/plain": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "examples": ["Recal"],
                                        "minLength": 3,
                                        "maxLength": 128,
                                        "type": "string"
                                    },
                                    "slug": {
                                        "examples": ["recal"],
                                        "minLength": 3,
                                        "maxLength": 128,
                                        "pattern": "^[a-z0-9]+(?:[_-][a-z0-9]+)*$",
                                        "type": "string"
                                    }
                                },
                                "required": ["slug"]
                            }
                        }
                    }
                }
            }
        },
        "/v1/organizations/{orgSlug}/members": {
            "get": {
                "parameters": [
                    { "schema": { "type": "string" }, "in": "path", "name": "orgSlug", "required": true },
                    {
                        "schema": {
                            "anyOf": [
                                {
                                    "default": "organizations",
                                    "type": "string",
                                    "enum": ["organizations", "oauthConnections"]
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "default": "organizations",
                                        "type": "string",
                                        "enum": ["organizations", "oauthConnections"]
                                    }
                                }
                            ]
                        },
                        "in": "query",
                        "name": "includes",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": { "examples": ["user_1234567890"], "type": "string" },
                                "createdAt": {
                                    "examples": ["2025-05-03T13:50:25.000Z"],
                                    "anyOf": [
                                        { "examples": ["2025-05-03T13:50:25.000Z"], "type": "Date" },
                                        { "format": "date-time", "type": "string" },
                                        { "format": "date", "type": "string" },
                                        { "type": "number" }
                                    ]
                                }
                            },
                            "required": ["id", "createdAt"]
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": { "examples": ["user_1234567890"], "type": "string" },
                                            "createdAt": {
                                                "examples": ["2025-05-03T13:50:25.000Z"],
                                                "anyOf": [
                                                    { "examples": ["2025-05-03T13:50:25.000Z"], "type": "Date" },
                                                    { "format": "date-time", "type": "string" },
                                                    { "format": "date", "type": "string" },
                                                    { "type": "number" }
                                                ]
                                            }
                                        },
                                        "required": ["id", "createdAt"]
                                    }
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": { "examples": ["user_1234567890"], "type": "string" },
                                            "createdAt": {
                                                "examples": ["2025-05-03T13:50:25.000Z"],
                                                "anyOf": [
                                                    { "examples": ["2025-05-03T13:50:25.000Z"], "type": "Date" },
                                                    { "format": "date-time", "type": "string" },
                                                    { "format": "date", "type": "string" },
                                                    { "type": "number" }
                                                ]
                                            }
                                        },
                                        "required": ["id", "createdAt"]
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": { "examples": ["user_1234567890"], "type": "string" },
                                            "createdAt": {
                                                "examples": ["2025-05-03T13:50:25.000Z"],
                                                "anyOf": [
                                                    { "examples": ["2025-05-03T13:50:25.000Z"], "type": "Date" },
                                                    { "format": "date-time", "type": "string" },
                                                    { "format": "date", "type": "string" },
                                                    { "type": "number" }
                                                ]
                                            }
                                        },
                                        "required": ["id", "createdAt"]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "const": "Organization not found",
                        "content": {
                            "application/json": { "schema": { "const": "Organization not found", "type": "string" } },
                            "multipart/form-data": {
                                "schema": { "const": "Organization not found", "type": "string" }
                            },
                            "text/plain": { "schema": { "const": "Organization not found", "type": "string" } }
                        }
                    }
                },
                "operationId": "getV1OrganizationsByOrgSlugMembers",
                "tags": ["Organizations"],
                "security": [{ "recalToken": [] }],
                "description": "Get all members of an organization"
            },
            "post": {
                "parameters": [{ "schema": { "type": "string" }, "in": "path", "name": "orgSlug", "required": true }],
                "responses": {
                    "200": {
                        "examples": ["All users are already members of [orgSlug]"],
                        "content": {
                            "application/json": {
                                "schema": {
                                    "examples": ["All users are already members of [orgSlug]"],
                                    "type": "string"
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "examples": ["All users are already members of [orgSlug]"],
                                    "type": "string"
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "examples": ["All users are already members of [orgSlug]"],
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "201": {
                        "examples": ["5 users added successfully to [orgSlug]"],
                        "content": {
                            "application/json": {
                                "schema": { "examples": ["5 users added successfully to [orgSlug]"], "type": "string" }
                            },
                            "multipart/form-data": {
                                "schema": { "examples": ["5 users added successfully to [orgSlug]"], "type": "string" }
                            },
                            "text/plain": {
                                "schema": { "examples": ["5 users added successfully to [orgSlug]"], "type": "string" }
                            }
                        }
                    },
                    "404": {
                        "const": "Organization not found",
                        "content": {
                            "application/json": { "schema": { "const": "Organization not found", "type": "string" } },
                            "multipart/form-data": {
                                "schema": { "const": "Organization not found", "type": "string" }
                            },
                            "text/plain": { "schema": { "const": "Organization not found", "type": "string" } }
                        }
                    }
                },
                "operationId": "postV1OrganizationsByOrgSlugMembers",
                "tags": ["Organizations"],
                "security": [{ "recalToken": [] }],
                "description": "Add users to an organization",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": { "userIds": { "type": "array", "items": { "type": "string" } } },
                                "required": ["userIds"]
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": { "userIds": { "type": "array", "items": { "type": "string" } } },
                                "required": ["userIds"]
                            }
                        },
                        "text/plain": {
                            "schema": {
                                "type": "object",
                                "properties": { "userIds": { "type": "array", "items": { "type": "string" } } },
                                "required": ["userIds"]
                            }
                        }
                    }
                }
            },
            "delete": {
                "parameters": [{ "schema": { "type": "string" }, "in": "path", "name": "orgSlug", "required": true }],
                "responses": {
                    "200": {
                        "examples": ["Users removed successfully from [orgSlug]"],
                        "content": {
                            "application/json": {
                                "schema": {
                                    "examples": ["Users removed successfully from [orgSlug]"],
                                    "type": "string"
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "examples": ["Users removed successfully from [orgSlug]"],
                                    "type": "string"
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "examples": ["Users removed successfully from [orgSlug]"],
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "const": "Organization not found",
                        "content": {
                            "application/json": { "schema": { "const": "Organization not found", "type": "string" } },
                            "multipart/form-data": {
                                "schema": { "const": "Organization not found", "type": "string" }
                            },
                            "text/plain": { "schema": { "const": "Organization not found", "type": "string" } }
                        }
                    }
                },
                "operationId": "deleteV1OrganizationsByOrgSlugMembers",
                "tags": ["Organizations"],
                "security": [{ "recalToken": [] }],
                "description": "Remove a user from an organization",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": { "userIds": { "type": "array", "items": { "type": "string" } } },
                                "required": ["userIds"]
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": { "userIds": { "type": "array", "items": { "type": "string" } } },
                                "required": ["userIds"]
                            }
                        },
                        "text/plain": {
                            "schema": {
                                "type": "object",
                                "properties": { "userIds": { "type": "array", "items": { "type": "string" } } },
                                "required": ["userIds"]
                            }
                        }
                    }
                }
            }
        },
        "/v1/organizations/{orgSlug}/calendar/free-busy": {
            "get": {
                "parameters": [
                    { "schema": { "type": "string" }, "in": "path", "name": "orgSlug", "required": true },
                    {
                        "schema": {
                            "anyOf": [
                                { "type": "Date" },
                                { "format": "date-time", "type": "string" },
                                { "format": "date", "type": "string" },
                                { "type": "number" }
                            ]
                        },
                        "in": "query",
                        "name": "minDate",
                        "required": true
                    },
                    {
                        "schema": {
                            "anyOf": [
                                { "type": "Date" },
                                { "format": "date-time", "type": "string" },
                                { "format": "date", "type": "string" },
                                { "type": "number" }
                            ]
                        },
                        "in": "query",
                        "name": "maxDate",
                        "required": true
                    },
                    {
                        "schema": { "type": "string", "default": "UTC" },
                        "in": "query",
                        "name": "timeZone",
                        "required": false
                    },
                    {
                        "schema": { "type": "boolean", "default": false },
                        "in": "query",
                        "name": "primaryOnly",
                        "required": false
                    },
                    {
                        "schema": {
                            "anyOf": [
                                {
                                    "pattern": "^(google|microsoft)$",
                                    "examples": ["google", "microsoft"],
                                    "description": "Calendar provider (google or microsoft)",
                                    "type": "string"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "pattern": "^(google|microsoft)$",
                                        "examples": ["google", "microsoft"],
                                        "description": "Calendar provider (google or microsoft)",
                                        "type": "string"
                                    }
                                }
                            ]
                        },
                        "in": "query",
                        "name": "provider",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "items": {
                            "type": "object",
                            "properties": {
                                "start": {
                                    "description": "Date in ISO format with timezone",
                                    "examples": ["1970-01-01T01:00:00.000+01:00"],
                                    "type": "string"
                                },
                                "end": {
                                    "description": "Date in ISO format with timezone",
                                    "examples": ["1970-01-01T01:00:00.000+01:00"],
                                    "type": "string"
                                }
                            },
                            "required": ["start", "end"]
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "start": {
                                                "description": "Date in ISO format with timezone",
                                                "examples": ["1970-01-01T01:00:00.000+01:00"],
                                                "type": "string"
                                            },
                                            "end": {
                                                "description": "Date in ISO format with timezone",
                                                "examples": ["1970-01-01T01:00:00.000+01:00"],
                                                "type": "string"
                                            }
                                        },
                                        "required": ["start", "end"]
                                    }
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "start": {
                                                "description": "Date in ISO format with timezone",
                                                "examples": ["1970-01-01T01:00:00.000+01:00"],
                                                "type": "string"
                                            },
                                            "end": {
                                                "description": "Date in ISO format with timezone",
                                                "examples": ["1970-01-01T01:00:00.000+01:00"],
                                                "type": "string"
                                            }
                                        },
                                        "required": ["start", "end"]
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "start": {
                                                "description": "Date in ISO format with timezone",
                                                "examples": ["1970-01-01T01:00:00.000+01:00"],
                                                "type": "string"
                                            },
                                            "end": {
                                                "description": "Date in ISO format with timezone",
                                                "examples": ["1970-01-01T01:00:00.000+01:00"],
                                                "type": "string"
                                            }
                                        },
                                        "required": ["start", "end"]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "examples": ["User has no connected calendars"],
                        "content": {
                            "application/json": {
                                "schema": { "examples": ["User has no connected calendars"], "type": "string" }
                            },
                            "multipart/form-data": {
                                "schema": { "examples": ["User has no connected calendars"], "type": "string" }
                            },
                            "text/plain": {
                                "schema": { "examples": ["User has no connected calendars"], "type": "string" }
                            }
                        }
                    },
                    "404": {
                        "examples": ["Organization not found"],
                        "content": {
                            "application/json": {
                                "schema": { "examples": ["Organization not found"], "type": "string" }
                            },
                            "multipart/form-data": {
                                "schema": { "examples": ["Organization not found"], "type": "string" }
                            },
                            "text/plain": { "schema": { "examples": ["Organization not found"], "type": "string" } }
                        }
                    }
                },
                "operationId": "getV1OrganizationsByOrgSlugCalendarFree-busy",
                "tags": ["Organization Calendar"],
                "security": [{ "recalToken": [] }],
                "description": "Get the consolidated free-busy of all users of an organization"
            }
        },
        "/v1/organizations/{orgSlug}/scheduling": {
            "get": {
                "parameters": [
                    {
                        "description": "Overrides the time zone of the request",
                        "examples": ["UTC", "Europe/Berlin"],
                        "schema": { "type": "string" },
                        "in": "header",
                        "name": "x-timezone",
                        "required": false
                    },
                    { "schema": { "type": "string" }, "in": "path", "name": "orgSlug", "required": true },
                    {
                        "schema": {
                            "anyOf": [
                                {
                                    "pattern": "^(google|microsoft)$",
                                    "examples": ["google", "microsoft"],
                                    "description": "Calendar provider (google or microsoft)",
                                    "type": "string"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "pattern": "^(google|microsoft)$",
                                        "examples": ["google", "microsoft"],
                                        "description": "Calendar provider (google or microsoft)",
                                        "type": "string"
                                    }
                                }
                            ]
                        },
                        "in": "query",
                        "name": "provider",
                        "required": false
                    },
                    {
                        "description": "Padding in minutes to add before and after busy times",
                        "schema": { "type": "number", "default": 0 },
                        "in": "query",
                        "name": "padding",
                        "required": true
                    },
                    {
                        "description": "Duration of each slot in minutes",
                        "schema": { "type": "number", "default": 30 },
                        "in": "query",
                        "name": "slotDuration",
                        "required": true
                    },
                    {
                        "description": "Minimum time of day in ISO date string",
                        "examples": ["2025-06-04T00:00:00.000Z"],
                        "schema": {
                            "anyOf": [
                                {
                                    "description": "Minimum time of day in ISO date string",
                                    "examples": ["2025-06-04T00:00:00.000Z"],
                                    "type": "Date"
                                },
                                { "format": "date-time", "type": "string" },
                                { "format": "date", "type": "string" },
                                { "type": "number" }
                            ]
                        },
                        "in": "query",
                        "name": "startDate",
                        "required": true
                    },
                    {
                        "description": "Maximum time of day in ISO date string",
                        "examples": ["2025-06-10T00:00:00.000Z"],
                        "schema": {
                            "anyOf": [
                                {
                                    "description": "Maximum time of day in ISO date string",
                                    "examples": ["2025-06-10T00:00:00.000Z"],
                                    "type": "Date"
                                },
                                { "format": "date-time", "type": "string" },
                                { "format": "date", "type": "string" },
                                { "type": "number" }
                            ]
                        },
                        "in": "query",
                        "name": "endDate",
                        "required": true
                    },
                    {
                        "description": "Earliest time of day (UTC) (applied per day) (e.g., 9:00)",
                        "examples": ["14:00"],
                        "schema": { "type": "string", "default": "00:00" },
                        "in": "query",
                        "name": "earliestTime",
                        "required": false
                    },
                    {
                        "description": "Latest time of day (UTC) (applied per day) (e.g., 17:00)",
                        "examples": ["14:00"],
                        "schema": { "type": "string", "default": "23:59" },
                        "in": "query",
                        "name": "latestTime",
                        "required": false
                    },
                    {
                        "description": "Requested earliest time of day (time zone of the request) (narrows down the admin-defined window) (e.g., 10:00)",
                        "examples": ["14:00"],
                        "schema": { "type": "string" },
                        "in": "query",
                        "name": "requestedEarliestTime",
                        "required": false
                    },
                    {
                        "description": "Requested latest time of day (time zone of the request) (narrows down the admin-defined window) (e.g., 16:00)",
                        "examples": ["14:00"],
                        "schema": { "type": "string" },
                        "in": "query",
                        "name": "requestedLatestTime",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "availableSlots": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "start": {
                                                        "description": "Start time of the time range in ISO format",
                                                        "examples": ["2025-06-04T02:00:00.000+02:00"],
                                                        "type": "string"
                                                    },
                                                    "end": {
                                                        "description": "End time of the time range in ISO format",
                                                        "examples": ["2025-06-10T02:00:00.000+02:00"],
                                                        "type": "string"
                                                    },
                                                    "userId": { "type": "string" }
                                                },
                                                "required": ["start", "end", "userId"]
                                            }
                                        },
                                        "options": {
                                            "type": "object",
                                            "properties": {
                                                "padding": {
                                                    "default": 0,
                                                    "description": "Padding in minutes to add before and after busy times",
                                                    "type": "number"
                                                },
                                                "slotDuration": {
                                                    "default": 30,
                                                    "description": "Duration of each slot in minutes",
                                                    "type": "number"
                                                },
                                                "startDate": {
                                                    "description": "Start of the time range to scan for availability (inclusive)",
                                                    "examples": ["2025-06-04T02:00:00.000+02:00"],
                                                    "type": "string"
                                                },
                                                "endDate": {
                                                    "description": "End of the time range to scan for availability (inclusive)",
                                                    "examples": ["2025-06-10T02:00:00.000+02:00"],
                                                    "type": "string"
                                                },
                                                "earliestTime": {
                                                    "description": "Earliest time of day (UTC) to consider for scheduling on each day within the range (e.g., 9:00)",
                                                    "examples": ["14:00"],
                                                    "type": "string"
                                                },
                                                "latestTime": {
                                                    "description": "Latest time of day (UTC) to consider for scheduling on each day within the range (e.g., 17:00)",
                                                    "examples": ["14:00"],
                                                    "type": "string"
                                                },
                                                "requestedEarliestTime": {
                                                    "description": "Requested earliest time of day (time zone of the request) to narrow down the scheduling window (e.g., 10:00)",
                                                    "examples": ["14:00"],
                                                    "type": "string"
                                                },
                                                "requestedLatestTime": {
                                                    "description": "Requested latest time of day (time zone of the request) to narrow down the scheduling window (e.g., 16:00)",
                                                    "examples": ["14:00"],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "padding",
                                                "slotDuration",
                                                "startDate",
                                                "endDate",
                                                "earliestTime",
                                                "latestTime"
                                            ]
                                        }
                                    },
                                    "required": ["availableSlots", "options"]
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "availableSlots": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "start": {
                                                        "description": "Start time of the time range in ISO format",
                                                        "examples": ["2025-06-04T02:00:00.000+02:00"],
                                                        "type": "string"
                                                    },
                                                    "end": {
                                                        "description": "End time of the time range in ISO format",
                                                        "examples": ["2025-06-10T02:00:00.000+02:00"],
                                                        "type": "string"
                                                    },
                                                    "userId": { "type": "string" }
                                                },
                                                "required": ["start", "end", "userId"]
                                            }
                                        },
                                        "options": {
                                            "type": "object",
                                            "properties": {
                                                "padding": {
                                                    "default": 0,
                                                    "description": "Padding in minutes to add before and after busy times",
                                                    "type": "number"
                                                },
                                                "slotDuration": {
                                                    "default": 30,
                                                    "description": "Duration of each slot in minutes",
                                                    "type": "number"
                                                },
                                                "startDate": {
                                                    "description": "Start of the time range to scan for availability (inclusive)",
                                                    "examples": ["2025-06-04T02:00:00.000+02:00"],
                                                    "type": "string"
                                                },
                                                "endDate": {
                                                    "description": "End of the time range to scan for availability (inclusive)",
                                                    "examples": ["2025-06-10T02:00:00.000+02:00"],
                                                    "type": "string"
                                                },
                                                "earliestTime": {
                                                    "description": "Earliest time of day (UTC) to consider for scheduling on each day within the range (e.g., 9:00)",
                                                    "examples": ["14:00"],
                                                    "type": "string"
                                                },
                                                "latestTime": {
                                                    "description": "Latest time of day (UTC) to consider for scheduling on each day within the range (e.g., 17:00)",
                                                    "examples": ["14:00"],
                                                    "type": "string"
                                                },
                                                "requestedEarliestTime": {
                                                    "description": "Requested earliest time of day (time zone of the request) to narrow down the scheduling window (e.g., 10:00)",
                                                    "examples": ["14:00"],
                                                    "type": "string"
                                                },
                                                "requestedLatestTime": {
                                                    "description": "Requested latest time of day (time zone of the request) to narrow down the scheduling window (e.g., 16:00)",
                                                    "examples": ["14:00"],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "padding",
                                                "slotDuration",
                                                "startDate",
                                                "endDate",
                                                "earliestTime",
                                                "latestTime"
                                            ]
                                        }
                                    },
                                    "required": ["availableSlots", "options"]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "availableSlots": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "start": {
                                                        "description": "Start time of the time range in ISO format",
                                                        "examples": ["2025-06-04T02:00:00.000+02:00"],
                                                        "type": "string"
                                                    },
                                                    "end": {
                                                        "description": "End time of the time range in ISO format",
                                                        "examples": ["2025-06-10T02:00:00.000+02:00"],
                                                        "type": "string"
                                                    },
                                                    "userId": { "type": "string" }
                                                },
                                                "required": ["start", "end", "userId"]
                                            }
                                        },
                                        "options": {
                                            "type": "object",
                                            "properties": {
                                                "padding": {
                                                    "default": 0,
                                                    "description": "Padding in minutes to add before and after busy times",
                                                    "type": "number"
                                                },
                                                "slotDuration": {
                                                    "default": 30,
                                                    "description": "Duration of each slot in minutes",
                                                    "type": "number"
                                                },
                                                "startDate": {
                                                    "description": "Start of the time range to scan for availability (inclusive)",
                                                    "examples": ["2025-06-04T02:00:00.000+02:00"],
                                                    "type": "string"
                                                },
                                                "endDate": {
                                                    "description": "End of the time range to scan for availability (inclusive)",
                                                    "examples": ["2025-06-10T02:00:00.000+02:00"],
                                                    "type": "string"
                                                },
                                                "earliestTime": {
                                                    "description": "Earliest time of day (UTC) to consider for scheduling on each day within the range (e.g., 9:00)",
                                                    "examples": ["14:00"],
                                                    "type": "string"
                                                },
                                                "latestTime": {
                                                    "description": "Latest time of day (UTC) to consider for scheduling on each day within the range (e.g., 17:00)",
                                                    "examples": ["14:00"],
                                                    "type": "string"
                                                },
                                                "requestedEarliestTime": {
                                                    "description": "Requested earliest time of day (time zone of the request) to narrow down the scheduling window (e.g., 10:00)",
                                                    "examples": ["14:00"],
                                                    "type": "string"
                                                },
                                                "requestedLatestTime": {
                                                    "description": "Requested latest time of day (time zone of the request) to narrow down the scheduling window (e.g., 16:00)",
                                                    "examples": ["14:00"],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "padding",
                                                "slotDuration",
                                                "startDate",
                                                "endDate",
                                                "earliestTime",
                                                "latestTime"
                                            ]
                                        }
                                    },
                                    "required": ["availableSlots", "options"]
                                }
                            }
                        }
                    },
                    "400": {
                        "examples": ["Unable to process date: Invalid date format", "User has no connected calendars"],
                        "content": {
                            "application/json": {
                                "schema": {
                                    "examples": [
                                        "Unable to process date: Invalid date format",
                                        "User has no connected calendars"
                                    ],
                                    "type": "string"
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "examples": [
                                        "Unable to process date: Invalid date format",
                                        "User has no connected calendars"
                                    ],
                                    "type": "string"
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "examples": [
                                        "Unable to process date: Invalid date format",
                                        "User has no connected calendars"
                                    ],
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "examples": ["Sub-organization not found", "No users found in this sub-organization"],
                        "content": {
                            "application/json": {
                                "schema": {
                                    "examples": [
                                        "Sub-organization not found",
                                        "No users found in this sub-organization"
                                    ],
                                    "type": "string"
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "examples": [
                                        "Sub-organization not found",
                                        "No users found in this sub-organization"
                                    ],
                                    "type": "string"
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "examples": [
                                        "Sub-organization not found",
                                        "No users found in this sub-organization"
                                    ],
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "examples": ["An error occurred while processing your request"],
                        "content": {
                            "application/json": {
                                "schema": {
                                    "examples": ["An error occurred while processing your request"],
                                    "type": "string"
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "examples": ["An error occurred while processing your request"],
                                    "type": "string"
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "examples": ["An error occurred while processing your request"],
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "operationId": "getV1OrganizationsByOrgSlugScheduling",
                "tags": ["Organization Scheduling"],
                "security": [{ "recalToken": [] }],
                "description": "Get available time slots for all users in a sub-organization"
            },
            "post": {
                "parameters": [{ "schema": { "type": "string" }, "in": "path", "name": "orgSlug", "required": true }],
                "responses": {
                    "200": {
                        "examples": ["Sub-organization created successfully"],
                        "content": {
                            "application/json": {
                                "schema": { "examples": ["Sub-organization created successfully"], "type": "string" }
                            },
                            "multipart/form-data": {
                                "schema": { "examples": ["Sub-organization created successfully"], "type": "string" }
                            },
                            "text/plain": {
                                "schema": { "examples": ["Sub-organization created successfully"], "type": "string" }
                            }
                        }
                    },
                    "404": {
                        "examples": ["Sub-organization not found"],
                        "content": {
                            "application/json": {
                                "schema": { "examples": ["Sub-organization not found"], "type": "string" }
                            },
                            "multipart/form-data": {
                                "schema": { "examples": ["Sub-organization not found"], "type": "string" }
                            },
                            "text/plain": { "schema": { "examples": ["Sub-organization not found"], "type": "string" } }
                        }
                    }
                },
                "operationId": "postV1OrganizationsByOrgSlugScheduling",
                "tags": ["Organization Scheduling"],
                "security": [{ "recalToken": [] }],
                "description": "Create a new sub-organization",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": { "schema": {} },
                        "multipart/form-data": { "schema": {} },
                        "text/plain": { "schema": {} }
                    }
                }
            }
        },
        "/v1/users": {
            "get": {
                "responses": {
                    "200": {
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": { "examples": ["user_1234567890"], "type": "string" },
                                "createdAt": {
                                    "examples": ["2025-05-03T13:50:25.000Z"],
                                    "anyOf": [
                                        { "examples": ["2025-05-03T13:50:25.000Z"], "type": "Date" },
                                        { "format": "date-time", "type": "string" },
                                        { "format": "date", "type": "string" },
                                        { "type": "number" }
                                    ]
                                }
                            },
                            "required": ["id", "createdAt"]
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": { "examples": ["user_1234567890"], "type": "string" },
                                            "createdAt": {
                                                "examples": ["2025-05-03T13:50:25.000Z"],
                                                "anyOf": [
                                                    { "examples": ["2025-05-03T13:50:25.000Z"], "type": "Date" },
                                                    { "format": "date-time", "type": "string" },
                                                    { "format": "date", "type": "string" },
                                                    { "type": "number" }
                                                ]
                                            }
                                        },
                                        "required": ["id", "createdAt"]
                                    }
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": { "examples": ["user_1234567890"], "type": "string" },
                                            "createdAt": {
                                                "examples": ["2025-05-03T13:50:25.000Z"],
                                                "anyOf": [
                                                    { "examples": ["2025-05-03T13:50:25.000Z"], "type": "Date" },
                                                    { "format": "date-time", "type": "string" },
                                                    { "format": "date", "type": "string" },
                                                    { "type": "number" }
                                                ]
                                            }
                                        },
                                        "required": ["id", "createdAt"]
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": { "examples": ["user_1234567890"], "type": "string" },
                                            "createdAt": {
                                                "examples": ["2025-05-03T13:50:25.000Z"],
                                                "anyOf": [
                                                    { "examples": ["2025-05-03T13:50:25.000Z"], "type": "Date" },
                                                    { "format": "date-time", "type": "string" },
                                                    { "format": "date", "type": "string" },
                                                    { "type": "number" }
                                                ]
                                            }
                                        },
                                        "required": ["id", "createdAt"]
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "getV1Users",
                "tags": ["Users"],
                "description": "Get all users"
            },
            "post": {
                "parameters": [],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": { "examples": ["user_1234567890"], "type": "string" },
                                        "createdAt": {
                                            "examples": ["2025-05-03T13:50:25.000Z"],
                                            "anyOf": [
                                                { "examples": ["2025-05-03T13:50:25.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        }
                                    },
                                    "required": ["id", "createdAt"]
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": { "examples": ["user_1234567890"], "type": "string" },
                                        "createdAt": {
                                            "examples": ["2025-05-03T13:50:25.000Z"],
                                            "anyOf": [
                                                { "examples": ["2025-05-03T13:50:25.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        }
                                    },
                                    "required": ["id", "createdAt"]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": { "examples": ["user_1234567890"], "type": "string" },
                                        "createdAt": {
                                            "examples": ["2025-05-03T13:50:25.000Z"],
                                            "anyOf": [
                                                { "examples": ["2025-05-03T13:50:25.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        }
                                    },
                                    "required": ["id", "createdAt"]
                                }
                            }
                        }
                    },
                    "404": {
                        "examples": ["Organization not found"],
                        "content": {
                            "application/json": {
                                "schema": { "examples": ["Organization not found"], "type": "string" }
                            },
                            "multipart/form-data": {
                                "schema": { "examples": ["Organization not found"], "type": "string" }
                            },
                            "text/plain": { "schema": { "examples": ["Organization not found"], "type": "string" } }
                        }
                    },
                    "409": {
                        "examples": ["User already exists"],
                        "content": {
                            "application/json": { "schema": { "examples": ["User already exists"], "type": "string" } },
                            "multipart/form-data": {
                                "schema": { "examples": ["User already exists"], "type": "string" }
                            },
                            "text/plain": { "schema": { "examples": ["User already exists"], "type": "string" } }
                        }
                    }
                },
                "operationId": "postV1Users",
                "tags": ["Users"],
                "description": "Create a user",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": { "type": "string" },
                                    "organizationSlugs": { "type": "array", "items": { "type": "string" } }
                                },
                                "required": ["id"]
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": { "type": "string" },
                                    "organizationSlugs": { "type": "array", "items": { "type": "string" } }
                                },
                                "required": ["id"]
                            }
                        },
                        "text/plain": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": { "type": "string" },
                                    "organizationSlugs": { "type": "array", "items": { "type": "string" } }
                                },
                                "required": ["id"]
                            }
                        }
                    }
                }
            }
        },
        "/v1/users/{userId}": {
            "get": {
                "parameters": [
                    { "schema": { "type": "string" }, "in": "path", "name": "userId", "required": true },
                    {
                        "schema": {
                            "anyOf": [
                                {
                                    "default": "organizations",
                                    "type": "string",
                                    "enum": ["organizations", "oauthConnections"]
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "default": "organizations",
                                        "type": "string",
                                        "enum": ["organizations", "oauthConnections"]
                                    }
                                }
                            ]
                        },
                        "in": "query",
                        "name": "includes",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": { "examples": ["user_1234567890"], "type": "string" },
                                        "createdAt": {
                                            "examples": ["2025-05-03T13:50:25.000Z"],
                                            "anyOf": [
                                                { "examples": ["2025-05-03T13:50:25.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        }
                                    },
                                    "required": ["id", "createdAt"]
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": { "examples": ["user_1234567890"], "type": "string" },
                                        "createdAt": {
                                            "examples": ["2025-05-03T13:50:25.000Z"],
                                            "anyOf": [
                                                { "examples": ["2025-05-03T13:50:25.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        }
                                    },
                                    "required": ["id", "createdAt"]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": { "examples": ["user_1234567890"], "type": "string" },
                                        "createdAt": {
                                            "examples": ["2025-05-03T13:50:25.000Z"],
                                            "anyOf": [
                                                { "examples": ["2025-05-03T13:50:25.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        }
                                    },
                                    "required": ["id", "createdAt"]
                                }
                            }
                        }
                    },
                    "404": {
                        "examples": ["User not found"],
                        "content": {
                            "application/json": { "schema": { "examples": ["User not found"], "type": "string" } },
                            "multipart/form-data": { "schema": { "examples": ["User not found"], "type": "string" } },
                            "text/plain": { "schema": { "examples": ["User not found"], "type": "string" } }
                        }
                    }
                },
                "operationId": "getV1UsersByUserId",
                "tags": ["Users"],
                "description": "Get a user"
            },
            "put": {
                "parameters": [{ "schema": { "type": "string" }, "in": "path", "name": "userId", "required": true }],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": { "examples": ["user_1234567890"], "type": "string" },
                                        "createdAt": {
                                            "examples": ["2025-05-03T13:50:25.000Z"],
                                            "anyOf": [
                                                { "examples": ["2025-05-03T13:50:25.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        }
                                    },
                                    "required": ["id", "createdAt"]
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": { "examples": ["user_1234567890"], "type": "string" },
                                        "createdAt": {
                                            "examples": ["2025-05-03T13:50:25.000Z"],
                                            "anyOf": [
                                                { "examples": ["2025-05-03T13:50:25.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        }
                                    },
                                    "required": ["id", "createdAt"]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": { "examples": ["user_1234567890"], "type": "string" },
                                        "createdAt": {
                                            "examples": ["2025-05-03T13:50:25.000Z"],
                                            "anyOf": [
                                                { "examples": ["2025-05-03T13:50:25.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        }
                                    },
                                    "required": ["id", "createdAt"]
                                }
                            }
                        }
                    },
                    "404": {
                        "const": "User not found",
                        "content": {
                            "application/json": { "schema": { "const": "User not found", "type": "string" } },
                            "multipart/form-data": { "schema": { "const": "User not found", "type": "string" } },
                            "text/plain": { "schema": { "const": "User not found", "type": "string" } }
                        }
                    }
                },
                "operationId": "putV1UsersByUserId",
                "tags": ["Users"],
                "description": "Update a user",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": { "userId": { "type": "string" } },
                                "required": ["userId"]
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": { "userId": { "type": "string" } },
                                "required": ["userId"]
                            }
                        },
                        "text/plain": {
                            "schema": {
                                "type": "object",
                                "properties": { "userId": { "type": "string" } },
                                "required": ["userId"]
                            }
                        }
                    }
                }
            },
            "delete": {
                "parameters": [{ "schema": { "type": "string" }, "in": "path", "name": "userId", "required": true }],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": { "examples": ["user_1234567890"], "type": "string" },
                                        "createdAt": {
                                            "examples": ["2025-05-03T13:50:25.000Z"],
                                            "anyOf": [
                                                { "examples": ["2025-05-03T13:50:25.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        }
                                    },
                                    "required": ["id", "createdAt"]
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": { "examples": ["user_1234567890"], "type": "string" },
                                        "createdAt": {
                                            "examples": ["2025-05-03T13:50:25.000Z"],
                                            "anyOf": [
                                                { "examples": ["2025-05-03T13:50:25.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        }
                                    },
                                    "required": ["id", "createdAt"]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": { "examples": ["user_1234567890"], "type": "string" },
                                        "createdAt": {
                                            "examples": ["2025-05-03T13:50:25.000Z"],
                                            "anyOf": [
                                                { "examples": ["2025-05-03T13:50:25.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        }
                                    },
                                    "required": ["id", "createdAt"]
                                }
                            }
                        }
                    },
                    "404": {
                        "const": "User not found",
                        "content": {
                            "application/json": { "schema": { "const": "User not found", "type": "string" } },
                            "multipart/form-data": { "schema": { "const": "User not found", "type": "string" } },
                            "text/plain": { "schema": { "const": "User not found", "type": "string" } }
                        }
                    }
                },
                "operationId": "deleteV1UsersByUserId",
                "tags": ["Users"],
                "description": "Delete a user"
            }
        },
        "/v1/users/{userId}/oauth": {
            "get": {
                "parameters": [
                    { "schema": { "type": "string" }, "in": "path", "name": "userId", "required": true },
                    {
                        "description": "Redact the oauth connection",
                        "schema": { "type": "boolean", "default": true },
                        "in": "query",
                        "name": "redacted",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "items": {
                            "type": "object",
                            "properties": {
                                "provider": {
                                    "pattern": "^(google|microsoft)$",
                                    "examples": ["google", "microsoft"],
                                    "description": "Calendar provider (google or microsoft)",
                                    "type": "string"
                                },
                                "accessToken": {},
                                "refreshToken": { "anyOf": [{}, { "type": "null" }] },
                                "email": {
                                    "anyOf": [
                                        {
                                            "examples": ["user@example.com"],
                                            "minLength": 1,
                                            "maxLength": 256,
                                            "type": "string"
                                        },
                                        { "type": "null" }
                                    ]
                                },
                                "expiresAt": { "anyOf": [{ "type": "Date" }, { "type": "null" }] },
                                "scope": { "type": "array", "items": { "type": "string" } },
                                "alive": { "type": "boolean" }
                            },
                            "required": ["provider", "email", "expiresAt", "alive"]
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "provider": {
                                                "pattern": "^(google|microsoft)$",
                                                "examples": ["google", "microsoft"],
                                                "description": "Calendar provider (google or microsoft)",
                                                "type": "string"
                                            },
                                            "accessToken": {},
                                            "refreshToken": { "anyOf": [{}, { "type": "null" }] },
                                            "email": {
                                                "anyOf": [
                                                    {
                                                        "examples": ["user@example.com"],
                                                        "minLength": 1,
                                                        "maxLength": 256,
                                                        "type": "string"
                                                    },
                                                    { "type": "null" }
                                                ]
                                            },
                                            "expiresAt": { "anyOf": [{ "type": "Date" }, { "type": "null" }] },
                                            "scope": { "type": "array", "items": { "type": "string" } },
                                            "alive": { "type": "boolean" }
                                        },
                                        "required": ["provider", "email", "expiresAt", "alive"]
                                    }
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "provider": {
                                                "pattern": "^(google|microsoft)$",
                                                "examples": ["google", "microsoft"],
                                                "description": "Calendar provider (google or microsoft)",
                                                "type": "string"
                                            },
                                            "accessToken": {},
                                            "refreshToken": { "anyOf": [{}, { "type": "null" }] },
                                            "email": {
                                                "anyOf": [
                                                    {
                                                        "examples": ["user@example.com"],
                                                        "minLength": 1,
                                                        "maxLength": 256,
                                                        "type": "string"
                                                    },
                                                    { "type": "null" }
                                                ]
                                            },
                                            "expiresAt": { "anyOf": [{ "type": "Date" }, { "type": "null" }] },
                                            "scope": { "type": "array", "items": { "type": "string" } },
                                            "alive": { "type": "boolean" }
                                        },
                                        "required": ["provider", "email", "expiresAt", "alive"]
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "provider": {
                                                "pattern": "^(google|microsoft)$",
                                                "examples": ["google", "microsoft"],
                                                "description": "Calendar provider (google or microsoft)",
                                                "type": "string"
                                            },
                                            "accessToken": {},
                                            "refreshToken": { "anyOf": [{}, { "type": "null" }] },
                                            "email": {
                                                "anyOf": [
                                                    {
                                                        "examples": ["user@example.com"],
                                                        "minLength": 1,
                                                        "maxLength": 256,
                                                        "type": "string"
                                                    },
                                                    { "type": "null" }
                                                ]
                                            },
                                            "expiresAt": { "anyOf": [{ "type": "Date" }, { "type": "null" }] },
                                            "scope": { "type": "array", "items": { "type": "string" } },
                                            "alive": { "type": "boolean" }
                                        },
                                        "required": ["provider", "email", "expiresAt", "alive"]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "examples": ["User not found"],
                        "content": {
                            "application/json": { "schema": { "examples": ["User not found"], "type": "string" } },
                            "multipart/form-data": { "schema": { "examples": ["User not found"], "type": "string" } },
                            "text/plain": { "schema": { "examples": ["User not found"], "type": "string" } }
                        }
                    }
                },
                "operationId": "getV1UsersByUserIdOauth",
                "tags": ["User OAuth"],
                "description": "Get all oauth connections for a user"
            }
        },
        "/v1/users/{userId}/oauth/{provider}": {
            "get": {
                "parameters": [
                    {
                        "description": "Calendar provider (google or microsoft)",
                        "examples": ["google", "microsoft"],
                        "schema": { "type": "string", "pattern": "^(google|microsoft)$" },
                        "in": "path",
                        "name": "provider",
                        "required": true
                    },
                    { "schema": { "type": "string" }, "in": "path", "name": "userId", "required": true },
                    {
                        "description": "Redact the oauth connection",
                        "schema": { "type": "boolean", "default": true },
                        "in": "query",
                        "name": "redacted",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "provider": {
                                            "pattern": "^(google|microsoft)$",
                                            "examples": ["google", "microsoft"],
                                            "description": "Calendar provider (google or microsoft)",
                                            "type": "string"
                                        },
                                        "accessToken": {},
                                        "refreshToken": { "anyOf": [{}, { "type": "null" }] },
                                        "email": {
                                            "anyOf": [
                                                {
                                                    "examples": ["user@example.com"],
                                                    "minLength": 1,
                                                    "maxLength": 256,
                                                    "type": "string"
                                                },
                                                { "type": "null" }
                                            ]
                                        },
                                        "expiresAt": { "anyOf": [{ "type": "Date" }, { "type": "null" }] },
                                        "scope": { "type": "array", "items": { "type": "string" } },
                                        "alive": { "type": "boolean" }
                                    },
                                    "required": ["provider", "email", "expiresAt", "alive"]
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "provider": {
                                            "pattern": "^(google|microsoft)$",
                                            "examples": ["google", "microsoft"],
                                            "description": "Calendar provider (google or microsoft)",
                                            "type": "string"
                                        },
                                        "accessToken": {},
                                        "refreshToken": { "anyOf": [{}, { "type": "null" }] },
                                        "email": {
                                            "anyOf": [
                                                {
                                                    "examples": ["user@example.com"],
                                                    "minLength": 1,
                                                    "maxLength": 256,
                                                    "type": "string"
                                                },
                                                { "type": "null" }
                                            ]
                                        },
                                        "expiresAt": { "anyOf": [{ "type": "Date" }, { "type": "null" }] },
                                        "scope": { "type": "array", "items": { "type": "string" } },
                                        "alive": { "type": "boolean" }
                                    },
                                    "required": ["provider", "email", "expiresAt", "alive"]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "provider": {
                                            "pattern": "^(google|microsoft)$",
                                            "examples": ["google", "microsoft"],
                                            "description": "Calendar provider (google or microsoft)",
                                            "type": "string"
                                        },
                                        "accessToken": {},
                                        "refreshToken": { "anyOf": [{}, { "type": "null" }] },
                                        "email": {
                                            "anyOf": [
                                                {
                                                    "examples": ["user@example.com"],
                                                    "minLength": 1,
                                                    "maxLength": 256,
                                                    "type": "string"
                                                },
                                                { "type": "null" }
                                            ]
                                        },
                                        "expiresAt": { "anyOf": [{ "type": "Date" }, { "type": "null" }] },
                                        "scope": { "type": "array", "items": { "type": "string" } },
                                        "alive": { "type": "boolean" }
                                    },
                                    "required": ["provider", "email", "expiresAt", "alive"]
                                }
                            }
                        }
                    },
                    "404": {
                        "examples": ["User not found", "OAuth connection not found"],
                        "content": {
                            "application/json": {
                                "schema": {
                                    "examples": ["User not found", "OAuth connection not found"],
                                    "type": "string"
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "examples": ["User not found", "OAuth connection not found"],
                                    "type": "string"
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "examples": ["User not found", "OAuth connection not found"],
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "operationId": "getV1UsersByUserIdOauthByProvider",
                "tags": ["User OAuth"],
                "description": "Get the oauth connection for a user"
            },
            "post": {
                "parameters": [
                    { "schema": { "type": "string" }, "in": "path", "name": "userId", "required": true },
                    {
                        "description": "Calendar provider (google or microsoft)",
                        "examples": ["google", "microsoft"],
                        "schema": { "type": "string", "pattern": "^(google|microsoft)$" },
                        "in": "path",
                        "name": "provider",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "provider": {
                                            "pattern": "^(google|microsoft)$",
                                            "examples": ["google", "microsoft"],
                                            "description": "Calendar provider (google or microsoft)",
                                            "type": "string"
                                        },
                                        "accessToken": {},
                                        "refreshToken": { "anyOf": [{}, { "type": "null" }] },
                                        "email": {
                                            "anyOf": [
                                                {
                                                    "examples": ["user@example.com"],
                                                    "minLength": 1,
                                                    "maxLength": 256,
                                                    "type": "string"
                                                },
                                                { "type": "null" }
                                            ]
                                        },
                                        "expiresAt": { "anyOf": [{ "type": "Date" }, { "type": "null" }] },
                                        "scope": { "type": "array", "items": { "type": "string" } },
                                        "alive": { "type": "boolean" }
                                    },
                                    "required": ["provider", "email", "expiresAt", "alive"]
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "provider": {
                                            "pattern": "^(google|microsoft)$",
                                            "examples": ["google", "microsoft"],
                                            "description": "Calendar provider (google or microsoft)",
                                            "type": "string"
                                        },
                                        "accessToken": {},
                                        "refreshToken": { "anyOf": [{}, { "type": "null" }] },
                                        "email": {
                                            "anyOf": [
                                                {
                                                    "examples": ["user@example.com"],
                                                    "minLength": 1,
                                                    "maxLength": 256,
                                                    "type": "string"
                                                },
                                                { "type": "null" }
                                            ]
                                        },
                                        "expiresAt": { "anyOf": [{ "type": "Date" }, { "type": "null" }] },
                                        "scope": { "type": "array", "items": { "type": "string" } },
                                        "alive": { "type": "boolean" }
                                    },
                                    "required": ["provider", "email", "expiresAt", "alive"]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "provider": {
                                            "pattern": "^(google|microsoft)$",
                                            "examples": ["google", "microsoft"],
                                            "description": "Calendar provider (google or microsoft)",
                                            "type": "string"
                                        },
                                        "accessToken": {},
                                        "refreshToken": { "anyOf": [{}, { "type": "null" }] },
                                        "email": {
                                            "anyOf": [
                                                {
                                                    "examples": ["user@example.com"],
                                                    "minLength": 1,
                                                    "maxLength": 256,
                                                    "type": "string"
                                                },
                                                { "type": "null" }
                                            ]
                                        },
                                        "expiresAt": { "anyOf": [{ "type": "Date" }, { "type": "null" }] },
                                        "scope": { "type": "array", "items": { "type": "string" } },
                                        "alive": { "type": "boolean" }
                                    },
                                    "required": ["provider", "email", "expiresAt", "alive"]
                                }
                            }
                        }
                    },
                    "404": {
                        "examples": ["User not found", "OAuth connection not found"],
                        "content": {
                            "application/json": {
                                "schema": {
                                    "examples": ["User not found", "OAuth connection not found"],
                                    "type": "string"
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "examples": ["User not found", "OAuth connection not found"],
                                    "type": "string"
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "examples": ["User not found", "OAuth connection not found"],
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "operationId": "postV1UsersByUserIdOauthByProvider",
                "tags": ["User OAuth"],
                "description": "Set the token for the oauth provider",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "accessToken": {},
                                    "refreshToken": { "type": "string" },
                                    "scope": { "type": "array", "items": { "type": "string" } },
                                    "expiresAt": {
                                        "examples": ["2025-04-24T00:00:00.000Z"],
                                        "anyOf": [
                                            { "examples": ["2025-04-24T00:00:00.000Z"], "type": "Date" },
                                            { "format": "date-time", "type": "string" },
                                            { "format": "date", "type": "string" },
                                            { "type": "number" }
                                        ]
                                    },
                                    "email": {
                                        "examples": ["user@example.com"],
                                        "minLength": 1,
                                        "maxLength": 256,
                                        "type": "string"
                                    }
                                },
                                "required": ["accessToken", "scope"]
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "accessToken": {},
                                    "refreshToken": { "type": "string" },
                                    "scope": { "type": "array", "items": { "type": "string" } },
                                    "expiresAt": {
                                        "examples": ["2025-04-24T00:00:00.000Z"],
                                        "anyOf": [
                                            { "examples": ["2025-04-24T00:00:00.000Z"], "type": "Date" },
                                            { "format": "date-time", "type": "string" },
                                            { "format": "date", "type": "string" },
                                            { "type": "number" }
                                        ]
                                    },
                                    "email": {
                                        "examples": ["user@example.com"],
                                        "minLength": 1,
                                        "maxLength": 256,
                                        "type": "string"
                                    }
                                },
                                "required": ["accessToken", "scope"]
                            }
                        },
                        "text/plain": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "accessToken": {},
                                    "refreshToken": { "type": "string" },
                                    "scope": { "type": "array", "items": { "type": "string" } },
                                    "expiresAt": {
                                        "examples": ["2025-04-24T00:00:00.000Z"],
                                        "anyOf": [
                                            { "examples": ["2025-04-24T00:00:00.000Z"], "type": "Date" },
                                            { "format": "date-time", "type": "string" },
                                            { "format": "date", "type": "string" },
                                            { "type": "number" }
                                        ]
                                    },
                                    "email": {
                                        "examples": ["user@example.com"],
                                        "minLength": 1,
                                        "maxLength": 256,
                                        "type": "string"
                                    }
                                },
                                "required": ["accessToken", "scope"]
                            }
                        }
                    }
                }
            },
            "delete": {
                "parameters": [
                    { "schema": { "type": "string" }, "in": "path", "name": "userId", "required": true },
                    {
                        "description": "Calendar provider (google or microsoft)",
                        "examples": ["google", "microsoft"],
                        "schema": { "type": "string", "pattern": "^(google|microsoft)$" },
                        "in": "path",
                        "name": "provider",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "404": {
                        "examples": ["User not found", "OAuth connection not found"],
                        "content": {
                            "application/json": {
                                "schema": {
                                    "examples": ["User not found", "OAuth connection not found"],
                                    "type": "string"
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "examples": ["User not found", "OAuth connection not found"],
                                    "type": "string"
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "examples": ["User not found", "OAuth connection not found"],
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "operationId": "deleteV1UsersByUserIdOauthByProvider",
                "tags": ["User OAuth"],
                "description": "Delete the oauth connection for a user"
            }
        },
        "/v1/users/{userId}/oauth/links": {
            "get": {
                "parameters": [
                    { "schema": { "type": "string" }, "in": "path", "name": "userId", "required": true },
                    {
                        "schema": {
                            "anyOf": [
                                {
                                    "pattern": "^(google|microsoft)$",
                                    "examples": ["google", "microsoft"],
                                    "description": "Calendar provider (google or microsoft)",
                                    "type": "string"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "pattern": "^(google|microsoft)$",
                                        "examples": ["google", "microsoft"],
                                        "description": "Calendar provider (google or microsoft)",
                                        "type": "string"
                                    }
                                }
                            ]
                        },
                        "in": "query",
                        "name": "provider",
                        "required": false
                    },
                    {
                        "schema": {
                            "anyOf": [{ "const": "edit", "type": "string" }, { "const": "free-busy", "type": "string" }]
                        },
                        "in": "query",
                        "name": "scope",
                        "required": false
                    },
                    {
                        "schema": {
                            "anyOf": [{ "const": "offline", "type": "string" }, { "const": "online", "type": "string" }]
                        },
                        "in": "query",
                        "name": "accessType",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "items": {
                            "type": "object",
                            "properties": {
                                "provider": {
                                    "pattern": "^(google|microsoft)$",
                                    "examples": ["google", "microsoft"],
                                    "description": "Calendar provider (google or microsoft)",
                                    "type": "string"
                                },
                                "url": { "format": "url", "examples": ["https://example.com"], "type": "string" }
                            },
                            "required": ["provider", "url"]
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "provider": {
                                                "pattern": "^(google|microsoft)$",
                                                "examples": ["google", "microsoft"],
                                                "description": "Calendar provider (google or microsoft)",
                                                "type": "string"
                                            },
                                            "url": {
                                                "format": "url",
                                                "examples": ["https://example.com"],
                                                "type": "string"
                                            }
                                        },
                                        "required": ["provider", "url"]
                                    }
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "provider": {
                                                "pattern": "^(google|microsoft)$",
                                                "examples": ["google", "microsoft"],
                                                "description": "Calendar provider (google or microsoft)",
                                                "type": "string"
                                            },
                                            "url": {
                                                "format": "url",
                                                "examples": ["https://example.com"],
                                                "type": "string"
                                            }
                                        },
                                        "required": ["provider", "url"]
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "provider": {
                                                "pattern": "^(google|microsoft)$",
                                                "examples": ["google", "microsoft"],
                                                "description": "Calendar provider (google or microsoft)",
                                                "type": "string"
                                            },
                                            "url": {
                                                "format": "url",
                                                "examples": ["https://example.com"],
                                                "type": "string"
                                            }
                                        },
                                        "required": ["provider", "url"]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "const": "User not found",
                        "content": {
                            "application/json": { "schema": { "const": "User not found", "type": "string" } },
                            "multipart/form-data": { "schema": { "const": "User not found", "type": "string" } },
                            "text/plain": { "schema": { "const": "User not found", "type": "string" } }
                        }
                    }
                },
                "operationId": "getV1UsersByUserIdOauthLinks",
                "tags": ["User OAuth"],
                "description": "Get the auth urls for the oauth providers"
            }
        },
        "/v1/users/{userId}/oauth/{provider}/link": {
            "get": {
                "parameters": [
                    { "schema": { "type": "string" }, "in": "path", "name": "userId", "required": true },
                    {
                        "description": "Calendar provider (google or microsoft)",
                        "examples": ["google", "microsoft"],
                        "schema": { "type": "string", "pattern": "^(google|microsoft)$" },
                        "in": "path",
                        "name": "provider",
                        "required": true
                    },
                    {
                        "schema": {
                            "anyOf": [{ "const": "edit", "type": "string" }, { "const": "free-busy", "type": "string" }]
                        },
                        "in": "query",
                        "name": "scope",
                        "required": false
                    },
                    {
                        "schema": {
                            "anyOf": [{ "const": "offline", "type": "string" }, { "const": "online", "type": "string" }]
                        },
                        "in": "query",
                        "name": "accessType",
                        "required": false
                    },
                    {
                        "examples": ["https://example.com"],
                        "schema": { "type": "string", "format": "url" },
                        "in": "query",
                        "name": "redirectUrl",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "url": {
                                            "format": "url",
                                            "examples": ["https://example.com"],
                                            "type": "string"
                                        }
                                    },
                                    "required": ["url"]
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "url": {
                                            "format": "url",
                                            "examples": ["https://example.com"],
                                            "type": "string"
                                        }
                                    },
                                    "required": ["url"]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "url": {
                                            "format": "url",
                                            "examples": ["https://example.com"],
                                            "type": "string"
                                        }
                                    },
                                    "required": ["url"]
                                }
                            }
                        }
                    },
                    "404": {
                        "examples": ["User not found", "OAuth credentials not found"],
                        "content": {
                            "application/json": {
                                "schema": {
                                    "examples": ["User not found", "OAuth credentials not found"],
                                    "type": "string"
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "examples": ["User not found", "OAuth credentials not found"],
                                    "type": "string"
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "examples": ["User not found", "OAuth credentials not found"],
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "operationId": "getV1UsersByUserIdOauthByProviderLink",
                "tags": ["User OAuth"]
            }
        },
        "/v1/users/oauth/{provider}/verify": {
            "post": {
                "parameters": [
                    {
                        "description": "Calendar provider (google or microsoft)",
                        "examples": ["google", "microsoft"],
                        "schema": { "type": "string", "pattern": "^(google|microsoft)$" },
                        "in": "path",
                        "name": "provider",
                        "required": true
                    },
                    {
                        "examples": ["https://example.com"],
                        "schema": { "type": "string" },
                        "in": "query",
                        "name": "redirectUrl",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": { "success": { "examples": [true], "type": "boolean" } },
                                    "required": ["success"]
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "type": "object",
                                    "properties": { "success": { "examples": [true], "type": "boolean" } },
                                    "required": ["success"]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "type": "object",
                                    "properties": { "success": { "examples": [true], "type": "boolean" } },
                                    "required": ["success"]
                                }
                            }
                        }
                    },
                    "400": {
                        "examples": [
                            "Invalid code",
                            "Invalid state parameter format",
                            "OAuth credentials not configured for provider: <provider>"
                        ],
                        "content": {
                            "application/json": {
                                "schema": {
                                    "examples": [
                                        "Invalid code",
                                        "Invalid state parameter format",
                                        "OAuth credentials not configured for provider: <provider>"
                                    ],
                                    "type": "string"
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "examples": [
                                        "Invalid code",
                                        "Invalid state parameter format",
                                        "OAuth credentials not configured for provider: <provider>"
                                    ],
                                    "type": "string"
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "examples": [
                                        "Invalid code",
                                        "Invalid state parameter format",
                                        "OAuth credentials not configured for provider: <provider>"
                                    ],
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "examples": ["OAuth authorization provider not found", "User not found"],
                        "content": {
                            "application/json": {
                                "schema": {
                                    "examples": ["OAuth authorization provider not found", "User not found"],
                                    "type": "string"
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "examples": ["OAuth authorization provider not found", "User not found"],
                                    "type": "string"
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "examples": ["OAuth authorization provider not found", "User not found"],
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "operationId": "postV1UsersOauthByProviderVerify",
                "tags": ["User OAuth"],
                "description": "Validate the oauth code",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "code": { "type": "string" },
                                    "scope": { "type": "array", "items": { "type": "string" } },
                                    "state": { "type": "string" }
                                },
                                "required": ["code", "scope", "state"]
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "code": { "type": "string" },
                                    "scope": { "type": "array", "items": { "type": "string" } },
                                    "state": { "type": "string" }
                                },
                                "required": ["code", "scope", "state"]
                            }
                        },
                        "text/plain": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "code": { "type": "string" },
                                    "scope": { "type": "array", "items": { "type": "string" } },
                                    "state": { "type": "string" }
                                },
                                "required": ["code", "scope", "state"]
                            }
                        }
                    }
                }
            }
        },
        "/v1/users/{userId}/calendar/free-busy": {
            "get": {
                "parameters": [
                    { "schema": { "type": "string" }, "in": "path", "name": "userId", "required": true },
                    {
                        "schema": {
                            "anyOf": [
                                { "type": "Date" },
                                { "format": "date-time", "type": "string" },
                                { "format": "date", "type": "string" },
                                { "type": "number" }
                            ]
                        },
                        "in": "query",
                        "name": "minDate",
                        "required": true
                    },
                    {
                        "schema": {
                            "anyOf": [
                                { "type": "Date" },
                                { "format": "date-time", "type": "string" },
                                { "format": "date", "type": "string" },
                                { "type": "number" }
                            ]
                        },
                        "in": "query",
                        "name": "maxDate",
                        "required": true
                    },
                    {
                        "schema": { "type": "string", "default": "UTC" },
                        "in": "query",
                        "name": "timeZone",
                        "required": false
                    },
                    {
                        "schema": {
                            "anyOf": [
                                {
                                    "pattern": "^(google|microsoft)$",
                                    "examples": ["google", "microsoft"],
                                    "description": "Calendar provider (google or microsoft)",
                                    "type": "string"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "pattern": "^(google|microsoft)$",
                                        "examples": ["google", "microsoft"],
                                        "description": "Calendar provider (google or microsoft)",
                                        "type": "string"
                                    }
                                }
                            ]
                        },
                        "in": "query",
                        "name": "provider",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "items": {
                            "type": "object",
                            "properties": {
                                "start": {
                                    "description": "Date in ISO format with timezone",
                                    "examples": ["1970-01-01T01:00:00.000+01:00"],
                                    "type": "string"
                                },
                                "end": {
                                    "description": "Date in ISO format with timezone",
                                    "examples": ["1970-01-01T01:00:00.000+01:00"],
                                    "type": "string"
                                }
                            },
                            "required": ["start", "end"]
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "start": {
                                                "description": "Date in ISO format with timezone",
                                                "examples": ["1970-01-01T01:00:00.000+01:00"],
                                                "type": "string"
                                            },
                                            "end": {
                                                "description": "Date in ISO format with timezone",
                                                "examples": ["1970-01-01T01:00:00.000+01:00"],
                                                "type": "string"
                                            }
                                        },
                                        "required": ["start", "end"]
                                    }
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "start": {
                                                "description": "Date in ISO format with timezone",
                                                "examples": ["1970-01-01T01:00:00.000+01:00"],
                                                "type": "string"
                                            },
                                            "end": {
                                                "description": "Date in ISO format with timezone",
                                                "examples": ["1970-01-01T01:00:00.000+01:00"],
                                                "type": "string"
                                            }
                                        },
                                        "required": ["start", "end"]
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "start": {
                                                "description": "Date in ISO format with timezone",
                                                "examples": ["1970-01-01T01:00:00.000+01:00"],
                                                "type": "string"
                                            },
                                            "end": {
                                                "description": "Date in ISO format with timezone",
                                                "examples": ["1970-01-01T01:00:00.000+01:00"],
                                                "type": "string"
                                            }
                                        },
                                        "required": ["start", "end"]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "examples": ["User has not the needed calendars connected"],
                        "content": {
                            "application/json": {
                                "schema": {
                                    "examples": ["User has not the needed calendars connected"],
                                    "type": "string"
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "examples": ["User has not the needed calendars connected"],
                                    "type": "string"
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "examples": ["User has not the needed calendars connected"],
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "examples": ["Organization not found"],
                        "content": {
                            "application/json": {
                                "schema": { "examples": ["Organization not found"], "type": "string" }
                            },
                            "multipart/form-data": {
                                "schema": { "examples": ["Organization not found"], "type": "string" }
                            },
                            "text/plain": { "schema": { "examples": ["Organization not found"], "type": "string" } }
                        }
                    }
                },
                "operationId": "getV1UsersByUserIdCalendarFree-busy",
                "tags": ["User Calendar"],
                "description": "Get the free-busy of a user across all their calendars"
            }
        },
        "/v1/users/{userId}/calendar/events": {
            "get": {
                "parameters": [
                    { "schema": { "type": "string" }, "in": "path", "name": "userId", "required": true },
                    {
                        "schema": {
                            "anyOf": [
                                { "type": "Date" },
                                { "format": "date-time", "type": "string" },
                                { "format": "date", "type": "string" },
                                { "type": "number" }
                            ]
                        },
                        "in": "query",
                        "name": "minDate",
                        "required": true
                    },
                    {
                        "schema": {
                            "anyOf": [
                                { "type": "Date" },
                                { "format": "date-time", "type": "string" },
                                { "format": "date", "type": "string" },
                                { "type": "number" }
                            ]
                        },
                        "in": "query",
                        "name": "maxDate",
                        "required": true
                    },
                    {
                        "schema": { "type": "string", "default": "UTC" },
                        "in": "query",
                        "name": "timeZone",
                        "required": false
                    },
                    {
                        "schema": {
                            "anyOf": [
                                {
                                    "pattern": "^(google|microsoft)$",
                                    "examples": ["google", "microsoft"],
                                    "description": "Calendar provider (google or microsoft)",
                                    "type": "string"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "pattern": "^(google|microsoft)$",
                                        "examples": ["google", "microsoft"],
                                        "description": "Calendar provider (google or microsoft)",
                                        "type": "string"
                                    }
                                }
                            ]
                        },
                        "in": "query",
                        "name": "provider",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": { "type": "string" },
                                "metaId": { "type": "string" },
                                "subject": { "type": "string" },
                                "description": { "type": "string" },
                                "start": {
                                    "examples": ["1970-01-01T00:00:00.000Z"],
                                    "anyOf": [
                                        { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                        { "format": "date-time", "type": "string" },
                                        { "format": "date", "type": "string" },
                                        { "type": "number" }
                                    ]
                                },
                                "end": {
                                    "examples": ["1970-01-01T00:00:00.000Z"],
                                    "anyOf": [
                                        { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                        { "format": "date-time", "type": "string" },
                                        { "format": "date", "type": "string" },
                                        { "type": "number" }
                                    ]
                                },
                                "location": { "type": "string" },
                                "attendees": {
                                    "type": "array",
                                    "items": {
                                        "anyOf": [
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "email": { "type": "string" },
                                                    "responseStatus": {
                                                        "anyOf": [
                                                            { "const": "needsAction", "type": "string" },
                                                            { "const": "accepted", "type": "string" },
                                                            { "const": "tentative", "type": "string" },
                                                            { "const": "declined", "type": "string" }
                                                        ]
                                                    }
                                                },
                                                "required": ["email"]
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "email": { "type": "string" },
                                                    "self": { "type": "boolean" }
                                                },
                                                "required": ["email", "self"]
                                            }
                                        ]
                                    }
                                },
                                "original": {}
                            },
                            "required": ["id", "attendees", "original"]
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": { "type": "string" },
                                            "metaId": { "type": "string" },
                                            "subject": { "type": "string" },
                                            "description": { "type": "string" },
                                            "start": {
                                                "examples": ["1970-01-01T00:00:00.000Z"],
                                                "anyOf": [
                                                    { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                    { "format": "date-time", "type": "string" },
                                                    { "format": "date", "type": "string" },
                                                    { "type": "number" }
                                                ]
                                            },
                                            "end": {
                                                "examples": ["1970-01-01T00:00:00.000Z"],
                                                "anyOf": [
                                                    { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                    { "format": "date-time", "type": "string" },
                                                    { "format": "date", "type": "string" },
                                                    { "type": "number" }
                                                ]
                                            },
                                            "location": { "type": "string" },
                                            "attendees": {
                                                "type": "array",
                                                "items": {
                                                    "anyOf": [
                                                        {
                                                            "type": "object",
                                                            "properties": {
                                                                "email": { "type": "string" },
                                                                "responseStatus": {
                                                                    "anyOf": [
                                                                        { "const": "needsAction", "type": "string" },
                                                                        { "const": "accepted", "type": "string" },
                                                                        { "const": "tentative", "type": "string" },
                                                                        { "const": "declined", "type": "string" }
                                                                    ]
                                                                }
                                                            },
                                                            "required": ["email"]
                                                        },
                                                        {
                                                            "type": "object",
                                                            "properties": {
                                                                "email": { "type": "string" },
                                                                "self": { "type": "boolean" }
                                                            },
                                                            "required": ["email", "self"]
                                                        }
                                                    ]
                                                }
                                            },
                                            "original": {}
                                        },
                                        "required": ["id", "attendees", "original"]
                                    }
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": { "type": "string" },
                                            "metaId": { "type": "string" },
                                            "subject": { "type": "string" },
                                            "description": { "type": "string" },
                                            "start": {
                                                "examples": ["1970-01-01T00:00:00.000Z"],
                                                "anyOf": [
                                                    { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                    { "format": "date-time", "type": "string" },
                                                    { "format": "date", "type": "string" },
                                                    { "type": "number" }
                                                ]
                                            },
                                            "end": {
                                                "examples": ["1970-01-01T00:00:00.000Z"],
                                                "anyOf": [
                                                    { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                    { "format": "date-time", "type": "string" },
                                                    { "format": "date", "type": "string" },
                                                    { "type": "number" }
                                                ]
                                            },
                                            "location": { "type": "string" },
                                            "attendees": {
                                                "type": "array",
                                                "items": {
                                                    "anyOf": [
                                                        {
                                                            "type": "object",
                                                            "properties": {
                                                                "email": { "type": "string" },
                                                                "responseStatus": {
                                                                    "anyOf": [
                                                                        { "const": "needsAction", "type": "string" },
                                                                        { "const": "accepted", "type": "string" },
                                                                        { "const": "tentative", "type": "string" },
                                                                        { "const": "declined", "type": "string" }
                                                                    ]
                                                                }
                                                            },
                                                            "required": ["email"]
                                                        },
                                                        {
                                                            "type": "object",
                                                            "properties": {
                                                                "email": { "type": "string" },
                                                                "self": { "type": "boolean" }
                                                            },
                                                            "required": ["email", "self"]
                                                        }
                                                    ]
                                                }
                                            },
                                            "original": {}
                                        },
                                        "required": ["id", "attendees", "original"]
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": { "type": "string" },
                                            "metaId": { "type": "string" },
                                            "subject": { "type": "string" },
                                            "description": { "type": "string" },
                                            "start": {
                                                "examples": ["1970-01-01T00:00:00.000Z"],
                                                "anyOf": [
                                                    { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                    { "format": "date-time", "type": "string" },
                                                    { "format": "date", "type": "string" },
                                                    { "type": "number" }
                                                ]
                                            },
                                            "end": {
                                                "examples": ["1970-01-01T00:00:00.000Z"],
                                                "anyOf": [
                                                    { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                    { "format": "date-time", "type": "string" },
                                                    { "format": "date", "type": "string" },
                                                    { "type": "number" }
                                                ]
                                            },
                                            "location": { "type": "string" },
                                            "attendees": {
                                                "type": "array",
                                                "items": {
                                                    "anyOf": [
                                                        {
                                                            "type": "object",
                                                            "properties": {
                                                                "email": { "type": "string" },
                                                                "responseStatus": {
                                                                    "anyOf": [
                                                                        { "const": "needsAction", "type": "string" },
                                                                        { "const": "accepted", "type": "string" },
                                                                        { "const": "tentative", "type": "string" },
                                                                        { "const": "declined", "type": "string" }
                                                                    ]
                                                                }
                                                            },
                                                            "required": ["email"]
                                                        },
                                                        {
                                                            "type": "object",
                                                            "properties": {
                                                                "email": { "type": "string" },
                                                                "self": { "type": "boolean" }
                                                            },
                                                            "required": ["email", "self"]
                                                        }
                                                    ]
                                                }
                                            },
                                            "original": {}
                                        },
                                        "required": ["id", "attendees", "original"]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "examples": ["User has not the needed calendars connected"],
                        "content": {
                            "application/json": {
                                "schema": {
                                    "examples": ["User has not the needed calendars connected"],
                                    "type": "string"
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "examples": ["User has not the needed calendars connected"],
                                    "type": "string"
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "examples": ["User has not the needed calendars connected"],
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "examples": ["Organization not found"],
                        "content": {
                            "application/json": {
                                "schema": { "examples": ["Organization not found"], "type": "string" }
                            },
                            "multipart/form-data": {
                                "schema": { "examples": ["Organization not found"], "type": "string" }
                            },
                            "text/plain": { "schema": { "examples": ["Organization not found"], "type": "string" } }
                        }
                    }
                },
                "operationId": "getV1UsersByUserIdCalendarEvents",
                "tags": ["User Calendar"],
                "description": "Get the events of a user across all their calendars"
            }
        },
        "/v1/users/{userId}/calendar/events/meta/{metaId}": {
            "get": {
                "parameters": [
                    { "schema": { "type": "string" }, "in": "path", "name": "userId", "required": true },
                    { "schema": { "type": "string" }, "in": "path", "name": "metaId", "required": true },
                    {
                        "schema": { "type": "string", "default": "UTC" },
                        "in": "query",
                        "name": "timeZone",
                        "required": false
                    },
                    {
                        "schema": {
                            "anyOf": [
                                {
                                    "pattern": "^(google|microsoft)$",
                                    "examples": ["google", "microsoft"],
                                    "description": "Calendar provider (google or microsoft)",
                                    "type": "string"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "pattern": "^(google|microsoft)$",
                                        "examples": ["google", "microsoft"],
                                        "description": "Calendar provider (google or microsoft)",
                                        "type": "string"
                                    }
                                }
                            ]
                        },
                        "in": "query",
                        "name": "provider",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": { "type": "string" },
                                        "metaId": { "type": "string" },
                                        "subject": { "type": "string" },
                                        "description": { "type": "string" },
                                        "start": {
                                            "examples": ["1970-01-01T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "end": {
                                            "examples": ["1970-01-01T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "location": { "type": "string" },
                                        "attendees": {
                                            "type": "array",
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "email": { "type": "string" },
                                                            "responseStatus": {
                                                                "anyOf": [
                                                                    { "const": "needsAction", "type": "string" },
                                                                    { "const": "accepted", "type": "string" },
                                                                    { "const": "tentative", "type": "string" },
                                                                    { "const": "declined", "type": "string" }
                                                                ]
                                                            }
                                                        },
                                                        "required": ["email"]
                                                    },
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "email": { "type": "string" },
                                                            "self": { "type": "boolean" }
                                                        },
                                                        "required": ["email", "self"]
                                                    }
                                                ]
                                            }
                                        },
                                        "original": {}
                                    },
                                    "required": ["id", "attendees", "original"]
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": { "type": "string" },
                                        "metaId": { "type": "string" },
                                        "subject": { "type": "string" },
                                        "description": { "type": "string" },
                                        "start": {
                                            "examples": ["1970-01-01T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "end": {
                                            "examples": ["1970-01-01T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "location": { "type": "string" },
                                        "attendees": {
                                            "type": "array",
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "email": { "type": "string" },
                                                            "responseStatus": {
                                                                "anyOf": [
                                                                    { "const": "needsAction", "type": "string" },
                                                                    { "const": "accepted", "type": "string" },
                                                                    { "const": "tentative", "type": "string" },
                                                                    { "const": "declined", "type": "string" }
                                                                ]
                                                            }
                                                        },
                                                        "required": ["email"]
                                                    },
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "email": { "type": "string" },
                                                            "self": { "type": "boolean" }
                                                        },
                                                        "required": ["email", "self"]
                                                    }
                                                ]
                                            }
                                        },
                                        "original": {}
                                    },
                                    "required": ["id", "attendees", "original"]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": { "type": "string" },
                                        "metaId": { "type": "string" },
                                        "subject": { "type": "string" },
                                        "description": { "type": "string" },
                                        "start": {
                                            "examples": ["1970-01-01T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "end": {
                                            "examples": ["1970-01-01T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "location": { "type": "string" },
                                        "attendees": {
                                            "type": "array",
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "email": { "type": "string" },
                                                            "responseStatus": {
                                                                "anyOf": [
                                                                    { "const": "needsAction", "type": "string" },
                                                                    { "const": "accepted", "type": "string" },
                                                                    { "const": "tentative", "type": "string" },
                                                                    { "const": "declined", "type": "string" }
                                                                ]
                                                            }
                                                        },
                                                        "required": ["email"]
                                                    },
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "email": { "type": "string" },
                                                            "self": { "type": "boolean" }
                                                        },
                                                        "required": ["email", "self"]
                                                    }
                                                ]
                                            }
                                        },
                                        "original": {}
                                    },
                                    "required": ["id", "attendees", "original"]
                                }
                            }
                        }
                    },
                    "400": {
                        "examples": ["User has no connected calendars"],
                        "content": {
                            "application/json": {
                                "schema": { "examples": ["User has no connected calendars"], "type": "string" }
                            },
                            "multipart/form-data": {
                                "schema": { "examples": ["User has no connected calendars"], "type": "string" }
                            },
                            "text/plain": {
                                "schema": { "examples": ["User has no connected calendars"], "type": "string" }
                            }
                        }
                    },
                    "404": {
                        "examples": ["Organization not found", "User not found", "Event not found"],
                        "content": {
                            "application/json": {
                                "schema": {
                                    "examples": ["Organization not found", "User not found", "Event not found"],
                                    "type": "string"
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "examples": ["Organization not found", "User not found", "Event not found"],
                                    "type": "string"
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "examples": ["Organization not found", "User not found", "Event not found"],
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "operationId": "getV1UsersByUserIdCalendarEventsMetaByMetaId",
                "tags": ["User Calendar"],
                "description": "Get an event by metaId for a user across all their calendars"
            },
            "put": {
                "parameters": [
                    { "schema": { "type": "string" }, "in": "path", "name": "userId", "required": true },
                    { "schema": { "type": "string" }, "in": "path", "name": "metaId", "required": true },
                    {
                        "schema": { "type": "string", "default": "UTC" },
                        "in": "query",
                        "name": "timeZone",
                        "required": false
                    },
                    {
                        "schema": {
                            "anyOf": [
                                {
                                    "pattern": "^(google|microsoft)$",
                                    "examples": ["google", "microsoft"],
                                    "description": "Calendar provider (google or microsoft)",
                                    "type": "string"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "pattern": "^(google|microsoft)$",
                                        "examples": ["google", "microsoft"],
                                        "description": "Calendar provider (google or microsoft)",
                                        "type": "string"
                                    }
                                }
                            ]
                        },
                        "in": "query",
                        "name": "provider",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": { "type": "string" },
                                        "metaId": { "type": "string" },
                                        "subject": { "type": "string" },
                                        "description": { "type": "string" },
                                        "start": {
                                            "examples": ["1970-01-01T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "end": {
                                            "examples": ["1970-01-01T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "location": { "type": "string" },
                                        "attendees": {
                                            "type": "array",
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "email": { "type": "string" },
                                                            "responseStatus": {
                                                                "anyOf": [
                                                                    { "const": "needsAction", "type": "string" },
                                                                    { "const": "accepted", "type": "string" },
                                                                    { "const": "tentative", "type": "string" },
                                                                    { "const": "declined", "type": "string" }
                                                                ]
                                                            }
                                                        },
                                                        "required": ["email"]
                                                    },
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "email": { "type": "string" },
                                                            "self": { "type": "boolean" }
                                                        },
                                                        "required": ["email", "self"]
                                                    }
                                                ]
                                            }
                                        },
                                        "original": {}
                                    },
                                    "required": ["id", "attendees", "original"]
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": { "type": "string" },
                                        "metaId": { "type": "string" },
                                        "subject": { "type": "string" },
                                        "description": { "type": "string" },
                                        "start": {
                                            "examples": ["1970-01-01T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "end": {
                                            "examples": ["1970-01-01T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "location": { "type": "string" },
                                        "attendees": {
                                            "type": "array",
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "email": { "type": "string" },
                                                            "responseStatus": {
                                                                "anyOf": [
                                                                    { "const": "needsAction", "type": "string" },
                                                                    { "const": "accepted", "type": "string" },
                                                                    { "const": "tentative", "type": "string" },
                                                                    { "const": "declined", "type": "string" }
                                                                ]
                                                            }
                                                        },
                                                        "required": ["email"]
                                                    },
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "email": { "type": "string" },
                                                            "self": { "type": "boolean" }
                                                        },
                                                        "required": ["email", "self"]
                                                    }
                                                ]
                                            }
                                        },
                                        "original": {}
                                    },
                                    "required": ["id", "attendees", "original"]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": { "type": "string" },
                                        "metaId": { "type": "string" },
                                        "subject": { "type": "string" },
                                        "description": { "type": "string" },
                                        "start": {
                                            "examples": ["1970-01-01T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "end": {
                                            "examples": ["1970-01-01T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "location": { "type": "string" },
                                        "attendees": {
                                            "type": "array",
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "email": { "type": "string" },
                                                            "responseStatus": {
                                                                "anyOf": [
                                                                    { "const": "needsAction", "type": "string" },
                                                                    { "const": "accepted", "type": "string" },
                                                                    { "const": "tentative", "type": "string" },
                                                                    { "const": "declined", "type": "string" }
                                                                ]
                                                            }
                                                        },
                                                        "required": ["email"]
                                                    },
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "email": { "type": "string" },
                                                            "self": { "type": "boolean" }
                                                        },
                                                        "required": ["email", "self"]
                                                    }
                                                ]
                                            }
                                        },
                                        "original": {}
                                    },
                                    "required": ["id", "attendees", "original"]
                                }
                            }
                        }
                    },
                    "400": {
                        "examples": ["User has not the needed calendars connected"],
                        "content": {
                            "application/json": {
                                "schema": {
                                    "examples": ["User has not the needed calendars connected"],
                                    "type": "string"
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "examples": ["User has not the needed calendars connected"],
                                    "type": "string"
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "examples": ["User has not the needed calendars connected"],
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "examples": ["Organization not found", "User not found", "Event not found"],
                        "content": {
                            "application/json": {
                                "schema": {
                                    "examples": ["Organization not found", "User not found", "Event not found"],
                                    "type": "string"
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "examples": ["Organization not found", "User not found", "Event not found"],
                                    "type": "string"
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "examples": ["Organization not found", "User not found", "Event not found"],
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "operationId": "putV1UsersByUserIdCalendarEventsMetaByMetaId",
                "tags": ["User Calendar"],
                "description": "Update an event by metaId for a user across all their calendars",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "event": {
                                        "type": "object",
                                        "properties": {
                                            "metaId": { "type": "string" },
                                            "subject": { "type": "string" },
                                            "description": { "type": "string" },
                                            "start": {
                                                "examples": ["1970-01-01T00:00:00.000Z"],
                                                "anyOf": [
                                                    { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                    { "format": "date-time", "type": "string" },
                                                    { "format": "date", "type": "string" },
                                                    { "type": "number" }
                                                ]
                                            },
                                            "end": {
                                                "examples": ["1970-01-01T00:00:00.000Z"],
                                                "anyOf": [
                                                    { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                    { "format": "date-time", "type": "string" },
                                                    { "format": "date", "type": "string" },
                                                    { "type": "number" }
                                                ]
                                            },
                                            "location": { "type": "string" },
                                            "attendees": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": { "email": { "type": "string" } },
                                                    "required": ["email"]
                                                }
                                            },
                                            "sendNotificationsFor": {
                                                "type": "array",
                                                "items": {
                                                    "anyOf": [
                                                        { "const": "google", "type": "string" },
                                                        { "const": "microsoft", "type": "string" }
                                                    ]
                                                }
                                            },
                                            "meeting": {
                                                "anyOf": [
                                                    { "type": "boolean" },
                                                    {
                                                        "type": "object",
                                                        "properties": { "url": { "type": "string" } },
                                                        "required": ["url"]
                                                    }
                                                ]
                                            }
                                        },
                                        "required": ["metaId"]
                                    }
                                },
                                "required": ["event"]
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "event": {
                                        "type": "object",
                                        "properties": {
                                            "metaId": { "type": "string" },
                                            "subject": { "type": "string" },
                                            "description": { "type": "string" },
                                            "start": {
                                                "examples": ["1970-01-01T00:00:00.000Z"],
                                                "anyOf": [
                                                    { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                    { "format": "date-time", "type": "string" },
                                                    { "format": "date", "type": "string" },
                                                    { "type": "number" }
                                                ]
                                            },
                                            "end": {
                                                "examples": ["1970-01-01T00:00:00.000Z"],
                                                "anyOf": [
                                                    { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                    { "format": "date-time", "type": "string" },
                                                    { "format": "date", "type": "string" },
                                                    { "type": "number" }
                                                ]
                                            },
                                            "location": { "type": "string" },
                                            "attendees": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": { "email": { "type": "string" } },
                                                    "required": ["email"]
                                                }
                                            },
                                            "sendNotificationsFor": {
                                                "type": "array",
                                                "items": {
                                                    "anyOf": [
                                                        { "const": "google", "type": "string" },
                                                        { "const": "microsoft", "type": "string" }
                                                    ]
                                                }
                                            },
                                            "meeting": {
                                                "anyOf": [
                                                    { "type": "boolean" },
                                                    {
                                                        "type": "object",
                                                        "properties": { "url": { "type": "string" } },
                                                        "required": ["url"]
                                                    }
                                                ]
                                            }
                                        },
                                        "required": ["metaId"]
                                    }
                                },
                                "required": ["event"]
                            }
                        },
                        "text/plain": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "event": {
                                        "type": "object",
                                        "properties": {
                                            "metaId": { "type": "string" },
                                            "subject": { "type": "string" },
                                            "description": { "type": "string" },
                                            "start": {
                                                "examples": ["1970-01-01T00:00:00.000Z"],
                                                "anyOf": [
                                                    { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                    { "format": "date-time", "type": "string" },
                                                    { "format": "date", "type": "string" },
                                                    { "type": "number" }
                                                ]
                                            },
                                            "end": {
                                                "examples": ["1970-01-01T00:00:00.000Z"],
                                                "anyOf": [
                                                    { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                    { "format": "date-time", "type": "string" },
                                                    { "format": "date", "type": "string" },
                                                    { "type": "number" }
                                                ]
                                            },
                                            "location": { "type": "string" },
                                            "attendees": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": { "email": { "type": "string" } },
                                                    "required": ["email"]
                                                }
                                            },
                                            "sendNotificationsFor": {
                                                "type": "array",
                                                "items": {
                                                    "anyOf": [
                                                        { "const": "google", "type": "string" },
                                                        { "const": "microsoft", "type": "string" }
                                                    ]
                                                }
                                            },
                                            "meeting": {
                                                "anyOf": [
                                                    { "type": "boolean" },
                                                    {
                                                        "type": "object",
                                                        "properties": { "url": { "type": "string" } },
                                                        "required": ["url"]
                                                    }
                                                ]
                                            }
                                        },
                                        "required": ["metaId"]
                                    }
                                },
                                "required": ["event"]
                            }
                        }
                    }
                }
            },
            "delete": {
                "parameters": [
                    { "schema": { "type": "string" }, "in": "path", "name": "userId", "required": true },
                    { "schema": { "type": "string" }, "in": "path", "name": "metaId", "required": true },
                    {
                        "schema": { "type": "string", "default": "UTC" },
                        "in": "query",
                        "name": "timeZone",
                        "required": false
                    },
                    {
                        "schema": {
                            "anyOf": [
                                {
                                    "pattern": "^(google|microsoft)$",
                                    "examples": ["google", "microsoft"],
                                    "description": "Calendar provider (google or microsoft)",
                                    "type": "string"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "pattern": "^(google|microsoft)$",
                                        "examples": ["google", "microsoft"],
                                        "description": "Calendar provider (google or microsoft)",
                                        "type": "string"
                                    }
                                }
                            ]
                        },
                        "in": "query",
                        "name": "provider",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "examples": ["User has not the needed calendars connected"],
                        "content": {
                            "application/json": {
                                "schema": {
                                    "examples": ["User has not the needed calendars connected"],
                                    "type": "string"
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "examples": ["User has not the needed calendars connected"],
                                    "type": "string"
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "examples": ["User has not the needed calendars connected"],
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "examples": ["Organization not found", "User not found", "Event not found"],
                        "content": {
                            "application/json": {
                                "schema": {
                                    "examples": ["Organization not found", "User not found", "Event not found"],
                                    "type": "string"
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "examples": ["Organization not found", "User not found", "Event not found"],
                                    "type": "string"
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "examples": ["Organization not found", "User not found", "Event not found"],
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "operationId": "deleteV1UsersByUserIdCalendarEventsMetaByMetaId",
                "tags": ["User Calendar"],
                "description": "Delete an event by metaId for a user across all their calendars"
            }
        },
        "/v1/users/{userId}/calendar/events/meta": {
            "post": {
                "parameters": [
                    { "schema": { "type": "string" }, "in": "path", "name": "userId", "required": true },
                    {
                        "schema": { "type": "string", "default": "UTC" },
                        "in": "query",
                        "name": "timeZone",
                        "required": false
                    },
                    {
                        "schema": {
                            "anyOf": [
                                {
                                    "pattern": "^(google|microsoft)$",
                                    "examples": ["google", "microsoft"],
                                    "description": "Calendar provider (google or microsoft)",
                                    "type": "string"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "pattern": "^(google|microsoft)$",
                                        "examples": ["google", "microsoft"],
                                        "description": "Calendar provider (google or microsoft)",
                                        "type": "string"
                                    }
                                }
                            ]
                        },
                        "in": "query",
                        "name": "provider",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": { "type": "string" },
                                        "metaId": { "type": "string" },
                                        "subject": { "type": "string" },
                                        "description": { "type": "string" },
                                        "start": {
                                            "examples": ["1970-01-01T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "end": {
                                            "examples": ["1970-01-01T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "location": { "type": "string" },
                                        "attendees": {
                                            "type": "array",
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "email": { "type": "string" },
                                                            "responseStatus": {
                                                                "anyOf": [
                                                                    { "const": "needsAction", "type": "string" },
                                                                    { "const": "accepted", "type": "string" },
                                                                    { "const": "tentative", "type": "string" },
                                                                    { "const": "declined", "type": "string" }
                                                                ]
                                                            }
                                                        },
                                                        "required": ["email"]
                                                    },
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "email": { "type": "string" },
                                                            "self": { "type": "boolean" }
                                                        },
                                                        "required": ["email", "self"]
                                                    }
                                                ]
                                            }
                                        },
                                        "original": {}
                                    },
                                    "required": ["id", "attendees", "original"]
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": { "type": "string" },
                                        "metaId": { "type": "string" },
                                        "subject": { "type": "string" },
                                        "description": { "type": "string" },
                                        "start": {
                                            "examples": ["1970-01-01T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "end": {
                                            "examples": ["1970-01-01T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "location": { "type": "string" },
                                        "attendees": {
                                            "type": "array",
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "email": { "type": "string" },
                                                            "responseStatus": {
                                                                "anyOf": [
                                                                    { "const": "needsAction", "type": "string" },
                                                                    { "const": "accepted", "type": "string" },
                                                                    { "const": "tentative", "type": "string" },
                                                                    { "const": "declined", "type": "string" }
                                                                ]
                                                            }
                                                        },
                                                        "required": ["email"]
                                                    },
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "email": { "type": "string" },
                                                            "self": { "type": "boolean" }
                                                        },
                                                        "required": ["email", "self"]
                                                    }
                                                ]
                                            }
                                        },
                                        "original": {}
                                    },
                                    "required": ["id", "attendees", "original"]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": { "type": "string" },
                                        "metaId": { "type": "string" },
                                        "subject": { "type": "string" },
                                        "description": { "type": "string" },
                                        "start": {
                                            "examples": ["1970-01-01T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "end": {
                                            "examples": ["1970-01-01T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "location": { "type": "string" },
                                        "attendees": {
                                            "type": "array",
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "email": { "type": "string" },
                                                            "responseStatus": {
                                                                "anyOf": [
                                                                    { "const": "needsAction", "type": "string" },
                                                                    { "const": "accepted", "type": "string" },
                                                                    { "const": "tentative", "type": "string" },
                                                                    { "const": "declined", "type": "string" }
                                                                ]
                                                            }
                                                        },
                                                        "required": ["email"]
                                                    },
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "email": { "type": "string" },
                                                            "self": { "type": "boolean" }
                                                        },
                                                        "required": ["email", "self"]
                                                    }
                                                ]
                                            }
                                        },
                                        "original": {}
                                    },
                                    "required": ["id", "attendees", "original"]
                                }
                            }
                        }
                    },
                    "400": {
                        "examples": ["User has not the needed calendars connected"],
                        "content": {
                            "application/json": {
                                "schema": {
                                    "examples": ["User has not the needed calendars connected"],
                                    "type": "string"
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "examples": ["User has not the needed calendars connected"],
                                    "type": "string"
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "examples": ["User has not the needed calendars connected"],
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "examples": ["Organization not found", "User not found"],
                        "content": {
                            "application/json": {
                                "schema": { "examples": ["Organization not found", "User not found"], "type": "string" }
                            },
                            "multipart/form-data": {
                                "schema": { "examples": ["Organization not found", "User not found"], "type": "string" }
                            },
                            "text/plain": {
                                "schema": { "examples": ["Organization not found", "User not found"], "type": "string" }
                            }
                        }
                    }
                },
                "operationId": "postV1UsersByUserIdCalendarEventsMeta",
                "tags": ["User Calendar"],
                "description": "Create an event by metaId for a user across all their calendars",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "event": {
                                        "type": "object",
                                        "properties": {
                                            "metaId": { "type": "string" },
                                            "subject": { "type": "string" },
                                            "description": { "type": "string" },
                                            "start": {
                                                "examples": ["1970-01-01T00:00:00.000Z"],
                                                "anyOf": [
                                                    { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                    { "format": "date-time", "type": "string" },
                                                    { "format": "date", "type": "string" },
                                                    { "type": "number" }
                                                ]
                                            },
                                            "end": {
                                                "examples": ["1970-01-01T00:00:00.000Z"],
                                                "anyOf": [
                                                    { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                    { "format": "date-time", "type": "string" },
                                                    { "format": "date", "type": "string" },
                                                    { "type": "number" }
                                                ]
                                            },
                                            "location": { "type": "string" },
                                            "attendees": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": { "email": { "type": "string" } },
                                                    "required": ["email"]
                                                }
                                            },
                                            "sendNotificationsFor": {
                                                "type": "array",
                                                "items": {
                                                    "anyOf": [
                                                        { "const": "google", "type": "string" },
                                                        { "const": "microsoft", "type": "string" }
                                                    ]
                                                }
                                            },
                                            "meeting": {
                                                "anyOf": [
                                                    { "type": "boolean" },
                                                    {
                                                        "type": "object",
                                                        "properties": { "url": { "type": "string" } },
                                                        "required": ["url"]
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                },
                                "required": ["event"]
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "event": {
                                        "type": "object",
                                        "properties": {
                                            "metaId": { "type": "string" },
                                            "subject": { "type": "string" },
                                            "description": { "type": "string" },
                                            "start": {
                                                "examples": ["1970-01-01T00:00:00.000Z"],
                                                "anyOf": [
                                                    { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                    { "format": "date-time", "type": "string" },
                                                    { "format": "date", "type": "string" },
                                                    { "type": "number" }
                                                ]
                                            },
                                            "end": {
                                                "examples": ["1970-01-01T00:00:00.000Z"],
                                                "anyOf": [
                                                    { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                    { "format": "date-time", "type": "string" },
                                                    { "format": "date", "type": "string" },
                                                    { "type": "number" }
                                                ]
                                            },
                                            "location": { "type": "string" },
                                            "attendees": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": { "email": { "type": "string" } },
                                                    "required": ["email"]
                                                }
                                            },
                                            "sendNotificationsFor": {
                                                "type": "array",
                                                "items": {
                                                    "anyOf": [
                                                        { "const": "google", "type": "string" },
                                                        { "const": "microsoft", "type": "string" }
                                                    ]
                                                }
                                            },
                                            "meeting": {
                                                "anyOf": [
                                                    { "type": "boolean" },
                                                    {
                                                        "type": "object",
                                                        "properties": { "url": { "type": "string" } },
                                                        "required": ["url"]
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                },
                                "required": ["event"]
                            }
                        },
                        "text/plain": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "event": {
                                        "type": "object",
                                        "properties": {
                                            "metaId": { "type": "string" },
                                            "subject": { "type": "string" },
                                            "description": { "type": "string" },
                                            "start": {
                                                "examples": ["1970-01-01T00:00:00.000Z"],
                                                "anyOf": [
                                                    { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                    { "format": "date-time", "type": "string" },
                                                    { "format": "date", "type": "string" },
                                                    { "type": "number" }
                                                ]
                                            },
                                            "end": {
                                                "examples": ["1970-01-01T00:00:00.000Z"],
                                                "anyOf": [
                                                    { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                    { "format": "date-time", "type": "string" },
                                                    { "format": "date", "type": "string" },
                                                    { "type": "number" }
                                                ]
                                            },
                                            "location": { "type": "string" },
                                            "attendees": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": { "email": { "type": "string" } },
                                                    "required": ["email"]
                                                }
                                            },
                                            "sendNotificationsFor": {
                                                "type": "array",
                                                "items": {
                                                    "anyOf": [
                                                        { "const": "google", "type": "string" },
                                                        { "const": "microsoft", "type": "string" }
                                                    ]
                                                }
                                            },
                                            "meeting": {
                                                "anyOf": [
                                                    { "type": "boolean" },
                                                    {
                                                        "type": "object",
                                                        "properties": { "url": { "type": "string" } },
                                                        "required": ["url"]
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                },
                                "required": ["event"]
                            }
                        }
                    }
                }
            }
        },
        "/v1/users/{userId}/calendar/events/{provider}/{calendarId}/{eventId}": {
            "get": {
                "parameters": [
                    { "schema": { "type": "string" }, "in": "path", "name": "userId", "required": true },
                    {
                        "description": "Calendar provider (google or microsoft)",
                        "examples": ["google", "microsoft"],
                        "schema": { "type": "string", "pattern": "^(google|microsoft)$" },
                        "in": "path",
                        "name": "provider",
                        "required": true
                    },
                    { "schema": { "type": "string" }, "in": "path", "name": "calendarId", "required": true },
                    { "schema": { "type": "string" }, "in": "path", "name": "eventId", "required": true },
                    {
                        "schema": { "type": "string", "default": "UTC" },
                        "in": "query",
                        "name": "timeZone",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": { "type": "string" },
                                        "metaId": { "type": "string" },
                                        "subject": { "type": "string" },
                                        "description": { "type": "string" },
                                        "start": {
                                            "examples": ["1970-01-01T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "end": {
                                            "examples": ["1970-01-01T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "location": { "type": "string" },
                                        "attendees": {
                                            "type": "array",
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "email": { "type": "string" },
                                                            "responseStatus": {
                                                                "anyOf": [
                                                                    { "const": "needsAction", "type": "string" },
                                                                    { "const": "accepted", "type": "string" },
                                                                    { "const": "tentative", "type": "string" },
                                                                    { "const": "declined", "type": "string" }
                                                                ]
                                                            }
                                                        },
                                                        "required": ["email"]
                                                    },
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "email": { "type": "string" },
                                                            "self": { "type": "boolean" }
                                                        },
                                                        "required": ["email", "self"]
                                                    }
                                                ]
                                            }
                                        },
                                        "original": {}
                                    },
                                    "required": ["id", "attendees", "original"]
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": { "type": "string" },
                                        "metaId": { "type": "string" },
                                        "subject": { "type": "string" },
                                        "description": { "type": "string" },
                                        "start": {
                                            "examples": ["1970-01-01T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "end": {
                                            "examples": ["1970-01-01T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "location": { "type": "string" },
                                        "attendees": {
                                            "type": "array",
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "email": { "type": "string" },
                                                            "responseStatus": {
                                                                "anyOf": [
                                                                    { "const": "needsAction", "type": "string" },
                                                                    { "const": "accepted", "type": "string" },
                                                                    { "const": "tentative", "type": "string" },
                                                                    { "const": "declined", "type": "string" }
                                                                ]
                                                            }
                                                        },
                                                        "required": ["email"]
                                                    },
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "email": { "type": "string" },
                                                            "self": { "type": "boolean" }
                                                        },
                                                        "required": ["email", "self"]
                                                    }
                                                ]
                                            }
                                        },
                                        "original": {}
                                    },
                                    "required": ["id", "attendees", "original"]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": { "type": "string" },
                                        "metaId": { "type": "string" },
                                        "subject": { "type": "string" },
                                        "description": { "type": "string" },
                                        "start": {
                                            "examples": ["1970-01-01T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "end": {
                                            "examples": ["1970-01-01T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "location": { "type": "string" },
                                        "attendees": {
                                            "type": "array",
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "email": { "type": "string" },
                                                            "responseStatus": {
                                                                "anyOf": [
                                                                    { "const": "needsAction", "type": "string" },
                                                                    { "const": "accepted", "type": "string" },
                                                                    { "const": "tentative", "type": "string" },
                                                                    { "const": "declined", "type": "string" }
                                                                ]
                                                            }
                                                        },
                                                        "required": ["email"]
                                                    },
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "email": { "type": "string" },
                                                            "self": { "type": "boolean" }
                                                        },
                                                        "required": ["email", "self"]
                                                    }
                                                ]
                                            }
                                        },
                                        "original": {}
                                    },
                                    "required": ["id", "attendees", "original"]
                                }
                            }
                        }
                    },
                    "400": {
                        "examples": ["Invalid provider", "User has not connected this calendar provider"],
                        "content": {
                            "application/json": {
                                "schema": {
                                    "examples": ["Invalid provider", "User has not connected this calendar provider"],
                                    "type": "string"
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "examples": ["Invalid provider", "User has not connected this calendar provider"],
                                    "type": "string"
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "examples": ["Invalid provider", "User has not connected this calendar provider"],
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "examples": [
                            "Organization not found",
                            "User not found",
                            "OAuth credentials not found",
                            "Event not found"
                        ],
                        "content": {
                            "application/json": {
                                "schema": {
                                    "examples": [
                                        "Organization not found",
                                        "User not found",
                                        "OAuth credentials not found",
                                        "Event not found"
                                    ],
                                    "type": "string"
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "examples": [
                                        "Organization not found",
                                        "User not found",
                                        "OAuth credentials not found",
                                        "Event not found"
                                    ],
                                    "type": "string"
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "examples": [
                                        "Organization not found",
                                        "User not found",
                                        "OAuth credentials not found",
                                        "Event not found"
                                    ],
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "operationId": "getV1UsersByUserIdCalendarEventsByProviderByCalendarIdByEventId",
                "tags": ["User Calendar"],
                "description": "Get an event for a user for a specific calendar and provider"
            },
            "put": {
                "parameters": [
                    { "schema": { "type": "string" }, "in": "path", "name": "userId", "required": true },
                    {
                        "description": "Calendar provider (google or microsoft)",
                        "examples": ["google", "microsoft"],
                        "schema": { "type": "string", "pattern": "^(google|microsoft)$" },
                        "in": "path",
                        "name": "provider",
                        "required": true
                    },
                    { "schema": { "type": "string" }, "in": "path", "name": "calendarId", "required": true },
                    { "schema": { "type": "string" }, "in": "path", "name": "eventId", "required": true },
                    {
                        "schema": { "type": "string", "default": "UTC" },
                        "in": "query",
                        "name": "timeZone",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": { "type": "string" },
                                        "metaId": { "type": "string" },
                                        "subject": { "type": "string" },
                                        "description": { "type": "string" },
                                        "start": {
                                            "examples": ["1970-01-01T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "end": {
                                            "examples": ["1970-01-01T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "location": { "type": "string" },
                                        "attendees": {
                                            "type": "array",
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "email": { "type": "string" },
                                                            "responseStatus": {
                                                                "anyOf": [
                                                                    { "const": "needsAction", "type": "string" },
                                                                    { "const": "accepted", "type": "string" },
                                                                    { "const": "tentative", "type": "string" },
                                                                    { "const": "declined", "type": "string" }
                                                                ]
                                                            }
                                                        },
                                                        "required": ["email"]
                                                    },
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "email": { "type": "string" },
                                                            "self": { "type": "boolean" }
                                                        },
                                                        "required": ["email", "self"]
                                                    }
                                                ]
                                            }
                                        },
                                        "original": {}
                                    },
                                    "required": ["id", "attendees", "original"]
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": { "type": "string" },
                                        "metaId": { "type": "string" },
                                        "subject": { "type": "string" },
                                        "description": { "type": "string" },
                                        "start": {
                                            "examples": ["1970-01-01T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "end": {
                                            "examples": ["1970-01-01T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "location": { "type": "string" },
                                        "attendees": {
                                            "type": "array",
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "email": { "type": "string" },
                                                            "responseStatus": {
                                                                "anyOf": [
                                                                    { "const": "needsAction", "type": "string" },
                                                                    { "const": "accepted", "type": "string" },
                                                                    { "const": "tentative", "type": "string" },
                                                                    { "const": "declined", "type": "string" }
                                                                ]
                                                            }
                                                        },
                                                        "required": ["email"]
                                                    },
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "email": { "type": "string" },
                                                            "self": { "type": "boolean" }
                                                        },
                                                        "required": ["email", "self"]
                                                    }
                                                ]
                                            }
                                        },
                                        "original": {}
                                    },
                                    "required": ["id", "attendees", "original"]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": { "type": "string" },
                                        "metaId": { "type": "string" },
                                        "subject": { "type": "string" },
                                        "description": { "type": "string" },
                                        "start": {
                                            "examples": ["1970-01-01T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "end": {
                                            "examples": ["1970-01-01T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "location": { "type": "string" },
                                        "attendees": {
                                            "type": "array",
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "email": { "type": "string" },
                                                            "responseStatus": {
                                                                "anyOf": [
                                                                    { "const": "needsAction", "type": "string" },
                                                                    { "const": "accepted", "type": "string" },
                                                                    { "const": "tentative", "type": "string" },
                                                                    { "const": "declined", "type": "string" }
                                                                ]
                                                            }
                                                        },
                                                        "required": ["email"]
                                                    },
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "email": { "type": "string" },
                                                            "self": { "type": "boolean" }
                                                        },
                                                        "required": ["email", "self"]
                                                    }
                                                ]
                                            }
                                        },
                                        "original": {}
                                    },
                                    "required": ["id", "attendees", "original"]
                                }
                            }
                        }
                    },
                    "400": {
                        "examples": ["Invalid provider"],
                        "content": {
                            "application/json": { "schema": { "examples": ["Invalid provider"], "type": "string" } },
                            "multipart/form-data": { "schema": { "examples": ["Invalid provider"], "type": "string" } },
                            "text/plain": { "schema": { "examples": ["Invalid provider"], "type": "string" } }
                        }
                    },
                    "404": {
                        "examples": [
                            "Organization not found",
                            "User not found",
                            "OAuth credentials not found",
                            "Event not found"
                        ],
                        "content": {
                            "application/json": {
                                "schema": {
                                    "examples": [
                                        "Organization not found",
                                        "User not found",
                                        "OAuth credentials not found",
                                        "Event not found"
                                    ],
                                    "type": "string"
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "examples": [
                                        "Organization not found",
                                        "User not found",
                                        "OAuth credentials not found",
                                        "Event not found"
                                    ],
                                    "type": "string"
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "examples": [
                                        "Organization not found",
                                        "User not found",
                                        "OAuth credentials not found",
                                        "Event not found"
                                    ],
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "operationId": "putV1UsersByUserIdCalendarEventsByProviderByCalendarIdByEventId",
                "tags": ["User Calendar"],
                "description": "Update an event for a user for a specific calendar and provider",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "event": {
                                        "type": "object",
                                        "properties": {
                                            "id": { "type": "string" },
                                            "subject": { "type": "string" },
                                            "description": { "type": "string" },
                                            "start": {
                                                "examples": ["1970-01-01T00:00:00.000Z"],
                                                "anyOf": [
                                                    { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                    { "format": "date-time", "type": "string" },
                                                    { "format": "date", "type": "string" },
                                                    { "type": "number" }
                                                ]
                                            },
                                            "end": {
                                                "examples": ["1970-01-01T00:00:00.000Z"],
                                                "anyOf": [
                                                    { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                    { "format": "date-time", "type": "string" },
                                                    { "format": "date", "type": "string" },
                                                    { "type": "number" }
                                                ]
                                            },
                                            "location": { "type": "string" },
                                            "attendees": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": { "email": { "type": "string" } },
                                                    "required": ["email"]
                                                }
                                            },
                                            "sendNotifications": { "type": "boolean" },
                                            "meeting": {
                                                "anyOf": [
                                                    { "type": "boolean" },
                                                    {
                                                        "type": "object",
                                                        "properties": { "url": { "type": "string" } },
                                                        "required": ["url"]
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                },
                                "required": ["event"]
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "event": {
                                        "type": "object",
                                        "properties": {
                                            "id": { "type": "string" },
                                            "subject": { "type": "string" },
                                            "description": { "type": "string" },
                                            "start": {
                                                "examples": ["1970-01-01T00:00:00.000Z"],
                                                "anyOf": [
                                                    { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                    { "format": "date-time", "type": "string" },
                                                    { "format": "date", "type": "string" },
                                                    { "type": "number" }
                                                ]
                                            },
                                            "end": {
                                                "examples": ["1970-01-01T00:00:00.000Z"],
                                                "anyOf": [
                                                    { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                    { "format": "date-time", "type": "string" },
                                                    { "format": "date", "type": "string" },
                                                    { "type": "number" }
                                                ]
                                            },
                                            "location": { "type": "string" },
                                            "attendees": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": { "email": { "type": "string" } },
                                                    "required": ["email"]
                                                }
                                            },
                                            "sendNotifications": { "type": "boolean" },
                                            "meeting": {
                                                "anyOf": [
                                                    { "type": "boolean" },
                                                    {
                                                        "type": "object",
                                                        "properties": { "url": { "type": "string" } },
                                                        "required": ["url"]
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                },
                                "required": ["event"]
                            }
                        },
                        "text/plain": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "event": {
                                        "type": "object",
                                        "properties": {
                                            "id": { "type": "string" },
                                            "subject": { "type": "string" },
                                            "description": { "type": "string" },
                                            "start": {
                                                "examples": ["1970-01-01T00:00:00.000Z"],
                                                "anyOf": [
                                                    { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                    { "format": "date-time", "type": "string" },
                                                    { "format": "date", "type": "string" },
                                                    { "type": "number" }
                                                ]
                                            },
                                            "end": {
                                                "examples": ["1970-01-01T00:00:00.000Z"],
                                                "anyOf": [
                                                    { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                    { "format": "date-time", "type": "string" },
                                                    { "format": "date", "type": "string" },
                                                    { "type": "number" }
                                                ]
                                            },
                                            "location": { "type": "string" },
                                            "attendees": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": { "email": { "type": "string" } },
                                                    "required": ["email"]
                                                }
                                            },
                                            "sendNotifications": { "type": "boolean" },
                                            "meeting": {
                                                "anyOf": [
                                                    { "type": "boolean" },
                                                    {
                                                        "type": "object",
                                                        "properties": { "url": { "type": "string" } },
                                                        "required": ["url"]
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                },
                                "required": ["event"]
                            }
                        }
                    }
                }
            },
            "delete": {
                "parameters": [
                    { "schema": { "type": "string" }, "in": "path", "name": "userId", "required": true },
                    {
                        "description": "Calendar provider (google or microsoft)",
                        "examples": ["google", "microsoft"],
                        "schema": { "type": "string", "pattern": "^(google|microsoft)$" },
                        "in": "path",
                        "name": "provider",
                        "required": true
                    },
                    { "schema": { "type": "string" }, "in": "path", "name": "calendarId", "required": true },
                    { "schema": { "type": "string" }, "in": "path", "name": "eventId", "required": true },
                    {
                        "schema": { "type": "string", "default": "UTC" },
                        "in": "query",
                        "name": "timeZone",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "id": { "type": "string" },
                                    "metaId": { "type": "string" },
                                    "subject": { "type": "string" },
                                    "description": { "type": "string" },
                                    "start": {
                                        "examples": ["1970-01-01T00:00:00.000Z"],
                                        "anyOf": [
                                            { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                            { "format": "date-time", "type": "string" },
                                            { "format": "date", "type": "string" },
                                            { "type": "number" }
                                        ]
                                    },
                                    "end": {
                                        "examples": ["1970-01-01T00:00:00.000Z"],
                                        "anyOf": [
                                            { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                            { "format": "date-time", "type": "string" },
                                            { "format": "date", "type": "string" },
                                            { "type": "number" }
                                        ]
                                    },
                                    "location": { "type": "string" },
                                    "attendees": {
                                        "type": "array",
                                        "items": {
                                            "anyOf": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "email": { "type": "string" },
                                                        "responseStatus": {
                                                            "anyOf": [
                                                                { "const": "needsAction", "type": "string" },
                                                                { "const": "accepted", "type": "string" },
                                                                { "const": "tentative", "type": "string" },
                                                                { "const": "declined", "type": "string" }
                                                            ]
                                                        }
                                                    },
                                                    "required": ["email"]
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "email": { "type": "string" },
                                                        "self": { "type": "boolean" }
                                                    },
                                                    "required": ["email", "self"]
                                                }
                                            ]
                                        }
                                    },
                                    "original": {}
                                },
                                "required": ["id", "attendees", "original"]
                            },
                            {
                                "type": "object",
                                "properties": { "success": { "type": "boolean" } },
                                "required": ["success"]
                            }
                        ],
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "id": { "type": "string" },
                                                "metaId": { "type": "string" },
                                                "subject": { "type": "string" },
                                                "description": { "type": "string" },
                                                "start": {
                                                    "examples": ["1970-01-01T00:00:00.000Z"],
                                                    "anyOf": [
                                                        { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                        { "format": "date-time", "type": "string" },
                                                        { "format": "date", "type": "string" },
                                                        { "type": "number" }
                                                    ]
                                                },
                                                "end": {
                                                    "examples": ["1970-01-01T00:00:00.000Z"],
                                                    "anyOf": [
                                                        { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                        { "format": "date-time", "type": "string" },
                                                        { "format": "date", "type": "string" },
                                                        { "type": "number" }
                                                    ]
                                                },
                                                "location": { "type": "string" },
                                                "attendees": {
                                                    "type": "array",
                                                    "items": {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "properties": {
                                                                    "email": { "type": "string" },
                                                                    "responseStatus": {
                                                                        "anyOf": [
                                                                            {
                                                                                "const": "needsAction",
                                                                                "type": "string"
                                                                            },
                                                                            { "const": "accepted", "type": "string" },
                                                                            { "const": "tentative", "type": "string" },
                                                                            { "const": "declined", "type": "string" }
                                                                        ]
                                                                    }
                                                                },
                                                                "required": ["email"]
                                                            },
                                                            {
                                                                "type": "object",
                                                                "properties": {
                                                                    "email": { "type": "string" },
                                                                    "self": { "type": "boolean" }
                                                                },
                                                                "required": ["email", "self"]
                                                            }
                                                        ]
                                                    }
                                                },
                                                "original": {}
                                            },
                                            "required": ["id", "attendees", "original"]
                                        },
                                        {
                                            "type": "object",
                                            "properties": { "success": { "type": "boolean" } },
                                            "required": ["success"]
                                        }
                                    ]
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "id": { "type": "string" },
                                                "metaId": { "type": "string" },
                                                "subject": { "type": "string" },
                                                "description": { "type": "string" },
                                                "start": {
                                                    "examples": ["1970-01-01T00:00:00.000Z"],
                                                    "anyOf": [
                                                        { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                        { "format": "date-time", "type": "string" },
                                                        { "format": "date", "type": "string" },
                                                        { "type": "number" }
                                                    ]
                                                },
                                                "end": {
                                                    "examples": ["1970-01-01T00:00:00.000Z"],
                                                    "anyOf": [
                                                        { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                        { "format": "date-time", "type": "string" },
                                                        { "format": "date", "type": "string" },
                                                        { "type": "number" }
                                                    ]
                                                },
                                                "location": { "type": "string" },
                                                "attendees": {
                                                    "type": "array",
                                                    "items": {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "properties": {
                                                                    "email": { "type": "string" },
                                                                    "responseStatus": {
                                                                        "anyOf": [
                                                                            {
                                                                                "const": "needsAction",
                                                                                "type": "string"
                                                                            },
                                                                            { "const": "accepted", "type": "string" },
                                                                            { "const": "tentative", "type": "string" },
                                                                            { "const": "declined", "type": "string" }
                                                                        ]
                                                                    }
                                                                },
                                                                "required": ["email"]
                                                            },
                                                            {
                                                                "type": "object",
                                                                "properties": {
                                                                    "email": { "type": "string" },
                                                                    "self": { "type": "boolean" }
                                                                },
                                                                "required": ["email", "self"]
                                                            }
                                                        ]
                                                    }
                                                },
                                                "original": {}
                                            },
                                            "required": ["id", "attendees", "original"]
                                        },
                                        {
                                            "type": "object",
                                            "properties": { "success": { "type": "boolean" } },
                                            "required": ["success"]
                                        }
                                    ]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "id": { "type": "string" },
                                                "metaId": { "type": "string" },
                                                "subject": { "type": "string" },
                                                "description": { "type": "string" },
                                                "start": {
                                                    "examples": ["1970-01-01T00:00:00.000Z"],
                                                    "anyOf": [
                                                        { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                        { "format": "date-time", "type": "string" },
                                                        { "format": "date", "type": "string" },
                                                        { "type": "number" }
                                                    ]
                                                },
                                                "end": {
                                                    "examples": ["1970-01-01T00:00:00.000Z"],
                                                    "anyOf": [
                                                        { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                        { "format": "date-time", "type": "string" },
                                                        { "format": "date", "type": "string" },
                                                        { "type": "number" }
                                                    ]
                                                },
                                                "location": { "type": "string" },
                                                "attendees": {
                                                    "type": "array",
                                                    "items": {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "properties": {
                                                                    "email": { "type": "string" },
                                                                    "responseStatus": {
                                                                        "anyOf": [
                                                                            {
                                                                                "const": "needsAction",
                                                                                "type": "string"
                                                                            },
                                                                            { "const": "accepted", "type": "string" },
                                                                            { "const": "tentative", "type": "string" },
                                                                            { "const": "declined", "type": "string" }
                                                                        ]
                                                                    }
                                                                },
                                                                "required": ["email"]
                                                            },
                                                            {
                                                                "type": "object",
                                                                "properties": {
                                                                    "email": { "type": "string" },
                                                                    "self": { "type": "boolean" }
                                                                },
                                                                "required": ["email", "self"]
                                                            }
                                                        ]
                                                    }
                                                },
                                                "original": {}
                                            },
                                            "required": ["id", "attendees", "original"]
                                        },
                                        {
                                            "type": "object",
                                            "properties": { "success": { "type": "boolean" } },
                                            "required": ["success"]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "examples": ["Invalid provider"],
                        "content": {
                            "application/json": { "schema": { "examples": ["Invalid provider"], "type": "string" } },
                            "multipart/form-data": { "schema": { "examples": ["Invalid provider"], "type": "string" } },
                            "text/plain": { "schema": { "examples": ["Invalid provider"], "type": "string" } }
                        }
                    },
                    "404": {
                        "examples": [
                            "Organization not found",
                            "User not found",
                            "OAuth credentials not found",
                            "Event not found"
                        ],
                        "content": {
                            "application/json": {
                                "schema": {
                                    "examples": [
                                        "Organization not found",
                                        "User not found",
                                        "OAuth credentials not found",
                                        "Event not found"
                                    ],
                                    "type": "string"
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "examples": [
                                        "Organization not found",
                                        "User not found",
                                        "OAuth credentials not found",
                                        "Event not found"
                                    ],
                                    "type": "string"
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "examples": [
                                        "Organization not found",
                                        "User not found",
                                        "OAuth credentials not found",
                                        "Event not found"
                                    ],
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "operationId": "deleteV1UsersByUserIdCalendarEventsByProviderByCalendarIdByEventId",
                "tags": ["User Calendar"],
                "description": "Delete an event for a user for a specific calendar and provider"
            }
        },
        "/v1/users/{userId}/calendar/events/{provider}/{calendarId}": {
            "post": {
                "parameters": [
                    { "schema": { "type": "string" }, "in": "path", "name": "userId", "required": true },
                    {
                        "description": "Calendar provider (google or microsoft)",
                        "examples": ["google", "microsoft"],
                        "schema": { "type": "string", "pattern": "^(google|microsoft)$" },
                        "in": "path",
                        "name": "provider",
                        "required": true
                    },
                    { "schema": { "type": "string" }, "in": "path", "name": "calendarId", "required": true },
                    {
                        "schema": { "type": "string", "default": "UTC" },
                        "in": "query",
                        "name": "timeZone",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": { "type": "string" },
                                        "metaId": { "type": "string" },
                                        "subject": { "type": "string" },
                                        "description": { "type": "string" },
                                        "start": {
                                            "examples": ["1970-01-01T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "end": {
                                            "examples": ["1970-01-01T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "location": { "type": "string" },
                                        "attendees": {
                                            "type": "array",
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "email": { "type": "string" },
                                                            "responseStatus": {
                                                                "anyOf": [
                                                                    { "const": "needsAction", "type": "string" },
                                                                    { "const": "accepted", "type": "string" },
                                                                    { "const": "tentative", "type": "string" },
                                                                    { "const": "declined", "type": "string" }
                                                                ]
                                                            }
                                                        },
                                                        "required": ["email"]
                                                    },
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "email": { "type": "string" },
                                                            "self": { "type": "boolean" }
                                                        },
                                                        "required": ["email", "self"]
                                                    }
                                                ]
                                            }
                                        },
                                        "original": {}
                                    },
                                    "required": ["id", "attendees", "original"]
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": { "type": "string" },
                                        "metaId": { "type": "string" },
                                        "subject": { "type": "string" },
                                        "description": { "type": "string" },
                                        "start": {
                                            "examples": ["1970-01-01T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "end": {
                                            "examples": ["1970-01-01T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "location": { "type": "string" },
                                        "attendees": {
                                            "type": "array",
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "email": { "type": "string" },
                                                            "responseStatus": {
                                                                "anyOf": [
                                                                    { "const": "needsAction", "type": "string" },
                                                                    { "const": "accepted", "type": "string" },
                                                                    { "const": "tentative", "type": "string" },
                                                                    { "const": "declined", "type": "string" }
                                                                ]
                                                            }
                                                        },
                                                        "required": ["email"]
                                                    },
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "email": { "type": "string" },
                                                            "self": { "type": "boolean" }
                                                        },
                                                        "required": ["email", "self"]
                                                    }
                                                ]
                                            }
                                        },
                                        "original": {}
                                    },
                                    "required": ["id", "attendees", "original"]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": { "type": "string" },
                                        "metaId": { "type": "string" },
                                        "subject": { "type": "string" },
                                        "description": { "type": "string" },
                                        "start": {
                                            "examples": ["1970-01-01T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "end": {
                                            "examples": ["1970-01-01T00:00:00.000Z"],
                                            "anyOf": [
                                                { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                { "format": "date-time", "type": "string" },
                                                { "format": "date", "type": "string" },
                                                { "type": "number" }
                                            ]
                                        },
                                        "location": { "type": "string" },
                                        "attendees": {
                                            "type": "array",
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "email": { "type": "string" },
                                                            "responseStatus": {
                                                                "anyOf": [
                                                                    { "const": "needsAction", "type": "string" },
                                                                    { "const": "accepted", "type": "string" },
                                                                    { "const": "tentative", "type": "string" },
                                                                    { "const": "declined", "type": "string" }
                                                                ]
                                                            }
                                                        },
                                                        "required": ["email"]
                                                    },
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "email": { "type": "string" },
                                                            "self": { "type": "boolean" }
                                                        },
                                                        "required": ["email", "self"]
                                                    }
                                                ]
                                            }
                                        },
                                        "original": {}
                                    },
                                    "required": ["id", "attendees", "original"]
                                }
                            }
                        }
                    },
                    "400": {
                        "examples": ["Invalid provider"],
                        "content": {
                            "application/json": { "schema": { "examples": ["Invalid provider"], "type": "string" } },
                            "multipart/form-data": { "schema": { "examples": ["Invalid provider"], "type": "string" } },
                            "text/plain": { "schema": { "examples": ["Invalid provider"], "type": "string" } }
                        }
                    },
                    "404": {
                        "examples": [
                            "Organization not found",
                            "User not found",
                            "OAuth credentials not found",
                            "Event not found"
                        ],
                        "content": {
                            "application/json": {
                                "schema": {
                                    "examples": [
                                        "Organization not found",
                                        "User not found",
                                        "OAuth credentials not found",
                                        "Event not found"
                                    ],
                                    "type": "string"
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "examples": [
                                        "Organization not found",
                                        "User not found",
                                        "OAuth credentials not found",
                                        "Event not found"
                                    ],
                                    "type": "string"
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "examples": [
                                        "Organization not found",
                                        "User not found",
                                        "OAuth credentials not found",
                                        "Event not found"
                                    ],
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "operationId": "postV1UsersByUserIdCalendarEventsByProviderByCalendarId",
                "tags": ["User Calendar"],
                "description": "Create an event for a user for a specific calendar and provider",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "event": {
                                        "type": "object",
                                        "properties": {
                                            "metaId": { "type": "string" },
                                            "subject": { "type": "string" },
                                            "description": { "type": "string" },
                                            "start": {
                                                "examples": ["1970-01-01T00:00:00.000Z"],
                                                "anyOf": [
                                                    { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                    { "format": "date-time", "type": "string" },
                                                    { "format": "date", "type": "string" },
                                                    { "type": "number" }
                                                ]
                                            },
                                            "end": {
                                                "examples": ["1970-01-01T00:00:00.000Z"],
                                                "anyOf": [
                                                    { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                    { "format": "date-time", "type": "string" },
                                                    { "format": "date", "type": "string" },
                                                    { "type": "number" }
                                                ]
                                            },
                                            "location": { "type": "string" },
                                            "attendees": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": { "email": { "type": "string" } },
                                                    "required": ["email"]
                                                }
                                            },
                                            "sendNotifications": { "type": "boolean" },
                                            "meeting": {
                                                "anyOf": [
                                                    { "type": "boolean" },
                                                    {
                                                        "type": "object",
                                                        "properties": { "url": { "type": "string" } },
                                                        "required": ["url"]
                                                    }
                                                ]
                                            }
                                        },
                                        "required": ["sendNotifications"]
                                    }
                                },
                                "required": ["event"]
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "event": {
                                        "type": "object",
                                        "properties": {
                                            "metaId": { "type": "string" },
                                            "subject": { "type": "string" },
                                            "description": { "type": "string" },
                                            "start": {
                                                "examples": ["1970-01-01T00:00:00.000Z"],
                                                "anyOf": [
                                                    { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                    { "format": "date-time", "type": "string" },
                                                    { "format": "date", "type": "string" },
                                                    { "type": "number" }
                                                ]
                                            },
                                            "end": {
                                                "examples": ["1970-01-01T00:00:00.000Z"],
                                                "anyOf": [
                                                    { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                    { "format": "date-time", "type": "string" },
                                                    { "format": "date", "type": "string" },
                                                    { "type": "number" }
                                                ]
                                            },
                                            "location": { "type": "string" },
                                            "attendees": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": { "email": { "type": "string" } },
                                                    "required": ["email"]
                                                }
                                            },
                                            "sendNotifications": { "type": "boolean" },
                                            "meeting": {
                                                "anyOf": [
                                                    { "type": "boolean" },
                                                    {
                                                        "type": "object",
                                                        "properties": { "url": { "type": "string" } },
                                                        "required": ["url"]
                                                    }
                                                ]
                                            }
                                        },
                                        "required": ["sendNotifications"]
                                    }
                                },
                                "required": ["event"]
                            }
                        },
                        "text/plain": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "event": {
                                        "type": "object",
                                        "properties": {
                                            "metaId": { "type": "string" },
                                            "subject": { "type": "string" },
                                            "description": { "type": "string" },
                                            "start": {
                                                "examples": ["1970-01-01T00:00:00.000Z"],
                                                "anyOf": [
                                                    { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                    { "format": "date-time", "type": "string" },
                                                    { "format": "date", "type": "string" },
                                                    { "type": "number" }
                                                ]
                                            },
                                            "end": {
                                                "examples": ["1970-01-01T00:00:00.000Z"],
                                                "anyOf": [
                                                    { "examples": ["1970-01-01T00:00:00.000Z"], "type": "Date" },
                                                    { "format": "date-time", "type": "string" },
                                                    { "format": "date", "type": "string" },
                                                    { "type": "number" }
                                                ]
                                            },
                                            "location": { "type": "string" },
                                            "attendees": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": { "email": { "type": "string" } },
                                                    "required": ["email"]
                                                }
                                            },
                                            "sendNotifications": { "type": "boolean" },
                                            "meeting": {
                                                "anyOf": [
                                                    { "type": "boolean" },
                                                    {
                                                        "type": "object",
                                                        "properties": { "url": { "type": "string" } },
                                                        "required": ["url"]
                                                    }
                                                ]
                                            }
                                        },
                                        "required": ["sendNotifications"]
                                    }
                                },
                                "required": ["event"]
                            }
                        }
                    }
                }
            }
        },
        "/v1/users/{userId}/scheduling": {
            "get": {
                "parameters": [
                    {
                        "schema": { "type": "string", "default": "UTC" },
                        "in": "header",
                        "name": "x-timezone",
                        "required": false
                    },
                    { "schema": { "type": "string" }, "in": "path", "name": "userId", "required": true },
                    {
                        "schema": {
                            "anyOf": [
                                {
                                    "pattern": "^(google|microsoft)$",
                                    "examples": ["google", "microsoft"],
                                    "description": "Calendar provider (google or microsoft)",
                                    "type": "string"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "pattern": "^(google|microsoft)$",
                                        "examples": ["google", "microsoft"],
                                        "description": "Calendar provider (google or microsoft)",
                                        "type": "string"
                                    }
                                }
                            ]
                        },
                        "in": "query",
                        "name": "provider",
                        "required": false
                    },
                    {
                        "description": "Padding in minutes to add before and after busy times",
                        "schema": { "type": "number", "default": 0 },
                        "in": "query",
                        "name": "padding",
                        "required": true
                    },
                    {
                        "description": "Duration of each slot in minutes",
                        "schema": { "type": "number", "default": 30 },
                        "in": "query",
                        "name": "slotDuration",
                        "required": true
                    },
                    {
                        "description": "Minimum time of day in ISO date string",
                        "examples": ["2025-06-04T00:00:00.000Z"],
                        "schema": {
                            "anyOf": [
                                {
                                    "description": "Minimum time of day in ISO date string",
                                    "examples": ["2025-06-04T00:00:00.000Z"],
                                    "type": "Date"
                                },
                                { "format": "date-time", "type": "string" },
                                { "format": "date", "type": "string" },
                                { "type": "number" }
                            ]
                        },
                        "in": "query",
                        "name": "startDate",
                        "required": true
                    },
                    {
                        "description": "Maximum time of day in ISO date string",
                        "examples": ["2025-06-10T00:00:00.000Z"],
                        "schema": {
                            "anyOf": [
                                {
                                    "description": "Maximum time of day in ISO date string",
                                    "examples": ["2025-06-10T00:00:00.000Z"],
                                    "type": "Date"
                                },
                                { "format": "date-time", "type": "string" },
                                { "format": "date", "type": "string" },
                                { "type": "number" }
                            ]
                        },
                        "in": "query",
                        "name": "endDate",
                        "required": true
                    },
                    {
                        "description": "Earliest time of day (UTC) (applied per day) (e.g., 9:00)",
                        "examples": ["14:00"],
                        "schema": { "type": "string", "default": "00:00" },
                        "in": "query",
                        "name": "earliestTime",
                        "required": false
                    },
                    {
                        "description": "Latest time of day (UTC) (applied per day) (e.g., 17:00)",
                        "examples": ["14:00"],
                        "schema": { "type": "string", "default": "23:59" },
                        "in": "query",
                        "name": "latestTime",
                        "required": false
                    },
                    {
                        "description": "Requested earliest time of day (time zone of the request) (narrows down the admin-defined window) (e.g., 10:00)",
                        "examples": ["14:00"],
                        "schema": { "type": "string" },
                        "in": "query",
                        "name": "requestedEarliestTime",
                        "required": false
                    },
                    {
                        "description": "Requested latest time of day (time zone of the request) (narrows down the admin-defined window) (e.g., 16:00)",
                        "examples": ["14:00"],
                        "schema": { "type": "string" },
                        "in": "query",
                        "name": "requestedLatestTime",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "availableSlots": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "start": {
                                                        "description": "Date in ISO format with timezone",
                                                        "examples": ["1970-01-01T01:00:00.000+01:00"],
                                                        "type": "string"
                                                    },
                                                    "end": {
                                                        "description": "Date in ISO format with timezone",
                                                        "examples": ["1970-01-01T01:00:00.000+01:00"],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": ["start", "end"]
                                            }
                                        },
                                        "options": {
                                            "type": "object",
                                            "properties": {
                                                "padding": {
                                                    "default": 0,
                                                    "description": "Padding in minutes to add before and after busy times",
                                                    "type": "number"
                                                },
                                                "slotDuration": {
                                                    "default": 30,
                                                    "description": "Duration of each slot in minutes",
                                                    "type": "number"
                                                },
                                                "startDate": {
                                                    "description": "Start of the time range to scan for availability (inclusive)",
                                                    "examples": ["2025-06-04T02:00:00.000+02:00"],
                                                    "type": "string"
                                                },
                                                "endDate": {
                                                    "description": "End of the time range to scan for availability (inclusive)",
                                                    "examples": ["2025-06-10T02:00:00.000+02:00"],
                                                    "type": "string"
                                                },
                                                "earliestTime": {
                                                    "description": "Earliest time of day (UTC) to consider for scheduling on each day within the range (e.g., 9:00)",
                                                    "examples": ["14:00"],
                                                    "type": "string"
                                                },
                                                "latestTime": {
                                                    "description": "Latest time of day (UTC) to consider for scheduling on each day within the range (e.g., 17:00)",
                                                    "examples": ["14:00"],
                                                    "type": "string"
                                                },
                                                "requestedEarliestTime": {
                                                    "description": "Requested earliest time of day (time zone of the request) to narrow down the scheduling window (e.g., 10:00)",
                                                    "examples": ["14:00"],
                                                    "type": "string"
                                                },
                                                "requestedLatestTime": {
                                                    "description": "Requested latest time of day (time zone of the request) to narrow down the scheduling window (e.g., 16:00)",
                                                    "examples": ["14:00"],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "padding",
                                                "slotDuration",
                                                "startDate",
                                                "endDate",
                                                "earliestTime",
                                                "latestTime"
                                            ]
                                        }
                                    },
                                    "required": ["availableSlots", "options"]
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "availableSlots": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "start": {
                                                        "description": "Date in ISO format with timezone",
                                                        "examples": ["1970-01-01T01:00:00.000+01:00"],
                                                        "type": "string"
                                                    },
                                                    "end": {
                                                        "description": "Date in ISO format with timezone",
                                                        "examples": ["1970-01-01T01:00:00.000+01:00"],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": ["start", "end"]
                                            }
                                        },
                                        "options": {
                                            "type": "object",
                                            "properties": {
                                                "padding": {
                                                    "default": 0,
                                                    "description": "Padding in minutes to add before and after busy times",
                                                    "type": "number"
                                                },
                                                "slotDuration": {
                                                    "default": 30,
                                                    "description": "Duration of each slot in minutes",
                                                    "type": "number"
                                                },
                                                "startDate": {
                                                    "description": "Start of the time range to scan for availability (inclusive)",
                                                    "examples": ["2025-06-04T02:00:00.000+02:00"],
                                                    "type": "string"
                                                },
                                                "endDate": {
                                                    "description": "End of the time range to scan for availability (inclusive)",
                                                    "examples": ["2025-06-10T02:00:00.000+02:00"],
                                                    "type": "string"
                                                },
                                                "earliestTime": {
                                                    "description": "Earliest time of day (UTC) to consider for scheduling on each day within the range (e.g., 9:00)",
                                                    "examples": ["14:00"],
                                                    "type": "string"
                                                },
                                                "latestTime": {
                                                    "description": "Latest time of day (UTC) to consider for scheduling on each day within the range (e.g., 17:00)",
                                                    "examples": ["14:00"],
                                                    "type": "string"
                                                },
                                                "requestedEarliestTime": {
                                                    "description": "Requested earliest time of day (time zone of the request) to narrow down the scheduling window (e.g., 10:00)",
                                                    "examples": ["14:00"],
                                                    "type": "string"
                                                },
                                                "requestedLatestTime": {
                                                    "description": "Requested latest time of day (time zone of the request) to narrow down the scheduling window (e.g., 16:00)",
                                                    "examples": ["14:00"],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "padding",
                                                "slotDuration",
                                                "startDate",
                                                "endDate",
                                                "earliestTime",
                                                "latestTime"
                                            ]
                                        }
                                    },
                                    "required": ["availableSlots", "options"]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "availableSlots": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "start": {
                                                        "description": "Date in ISO format with timezone",
                                                        "examples": ["1970-01-01T01:00:00.000+01:00"],
                                                        "type": "string"
                                                    },
                                                    "end": {
                                                        "description": "Date in ISO format with timezone",
                                                        "examples": ["1970-01-01T01:00:00.000+01:00"],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": ["start", "end"]
                                            }
                                        },
                                        "options": {
                                            "type": "object",
                                            "properties": {
                                                "padding": {
                                                    "default": 0,
                                                    "description": "Padding in minutes to add before and after busy times",
                                                    "type": "number"
                                                },
                                                "slotDuration": {
                                                    "default": 30,
                                                    "description": "Duration of each slot in minutes",
                                                    "type": "number"
                                                },
                                                "startDate": {
                                                    "description": "Start of the time range to scan for availability (inclusive)",
                                                    "examples": ["2025-06-04T02:00:00.000+02:00"],
                                                    "type": "string"
                                                },
                                                "endDate": {
                                                    "description": "End of the time range to scan for availability (inclusive)",
                                                    "examples": ["2025-06-10T02:00:00.000+02:00"],
                                                    "type": "string"
                                                },
                                                "earliestTime": {
                                                    "description": "Earliest time of day (UTC) to consider for scheduling on each day within the range (e.g., 9:00)",
                                                    "examples": ["14:00"],
                                                    "type": "string"
                                                },
                                                "latestTime": {
                                                    "description": "Latest time of day (UTC) to consider for scheduling on each day within the range (e.g., 17:00)",
                                                    "examples": ["14:00"],
                                                    "type": "string"
                                                },
                                                "requestedEarliestTime": {
                                                    "description": "Requested earliest time of day (time zone of the request) to narrow down the scheduling window (e.g., 10:00)",
                                                    "examples": ["14:00"],
                                                    "type": "string"
                                                },
                                                "requestedLatestTime": {
                                                    "description": "Requested latest time of day (time zone of the request) to narrow down the scheduling window (e.g., 16:00)",
                                                    "examples": ["14:00"],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "padding",
                                                "slotDuration",
                                                "startDate",
                                                "endDate",
                                                "earliestTime",
                                                "latestTime"
                                            ]
                                        }
                                    },
                                    "required": ["availableSlots", "options"]
                                }
                            }
                        }
                    },
                    "400": {
                        "examples": ["Unable to process date: Invalid date format", "User has no connected calendars"],
                        "content": {
                            "application/json": {
                                "schema": {
                                    "examples": [
                                        "Unable to process date: Invalid date format",
                                        "User has no connected calendars"
                                    ],
                                    "type": "string"
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "examples": [
                                        "Unable to process date: Invalid date format",
                                        "User has no connected calendars"
                                    ],
                                    "type": "string"
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "examples": [
                                        "Unable to process date: Invalid date format",
                                        "User has no connected calendars"
                                    ],
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "examples": ["User not found"],
                        "content": {
                            "application/json": { "schema": { "examples": ["User not found"], "type": "string" } },
                            "multipart/form-data": { "schema": { "examples": ["User not found"], "type": "string" } },
                            "text/plain": { "schema": { "examples": ["User not found"], "type": "string" } }
                        }
                    },
                    "500": {
                        "examples": ["An error occurred while processing your request"],
                        "content": {
                            "application/json": {
                                "schema": {
                                    "examples": ["An error occurred while processing your request"],
                                    "type": "string"
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "examples": ["An error occurred while processing your request"],
                                    "type": "string"
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "examples": ["An error occurred while processing your request"],
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "operationId": "getV1UsersByUserIdScheduling",
                "tags": ["User Scheduling"],
                "description": "Get available time slots based on free-busy data with customizable parameters"
            }
        },
        "/v1/swagger": { "get": { "operationId": "getV1Swagger", "responses": { "200": {} } } }
    }
}
